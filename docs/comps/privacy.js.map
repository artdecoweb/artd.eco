{
"version":3,
"file":"docs/comps/privacy.js",
"lineCount":1,
"mappings":"AAGA,IAAMA,EAAa,EACnBC,EAAA,EAIA,KAAMC,GAAe,CACnB,SAAYC,CADO,CAArB,CAIMC,GAAKC,CAAA,EAEEC,EAAC,CACZC,IAAK,UADO,CAEZC,GAAI,OAFQ,CAGZC,EAAO,CACL,mBAAoB,0BADf,CAHK,CAADH,CAObI,QAAA,CAAa,QAAA,CAAC,CAAD,CAA4C,CAAzC,IAAAH,EAAF,CAAE,IAAA,CAAKC,EAAP,CAAO,GAAL,CAASC,EAAA,IAAA,EAAA,GAAX,CAAW,EAAA,CAAQ,EAAR,CAAX,CAAW,EAAT,CAAqBE,EAAA,IAAA,EAAA,GAAvB,CAAuB,SAAA,CAAW,EAAX,CAAvB,CAAuB,SAArB,CACRC,EAAOV,EAAA,CAAaK,CAAb,CAEbE,EAAAI,EAAA,CAAiB,CAAEC,EAAO,GAAT,CAAc,EAAAC,QAAM,CAACC,CAAD,CAAa,CAChD,MAAOC,EAAA,CAAgBjB,CAAA,CAAWgB,CAAX,CAAhB,CADyC,CAAjC,CAILR,EAAAU,MAAAC,CAAS,GAATA,CACZT,QAAA,CAAY,QAAA,CAACU,CAAD,CAAQ,CACZ,IAAA,EAAiBC,CAAA,CAAKD,CAAL,CAASb,CAAT,CAAjB,CAAEe,EAAA,CAAA,OAAF,CAAUC,EAAA,CAAA,EAChB,IAAKA,CAAL,CAAA,CACA,IAAMC,EAAmD,CAAEjB,IAAAA,CAAF,CAAOC,GAAIY,CAAX,CAAeK,MAT5DA,CAAAA,CAS6C,CAAzD,CACIC,CACJH,EAAAI,EAAA,CAAYC,QAAA,EAAM,CAEhB,MADAF,EACA,CADOG,CAAA,CAAWL,CAAX,CAAuBZ,CAAvB,CAA6Bc,CAA7B,CAAmCH,CAAnC,CAAuCD,CAAvC,CAA+Cb,CAA/C,CAAsDE,CAAtD,CADS,CAIlBY,EAAAI,EAAArB,EAAA,CAAiBkB,CACjBpB,GAAA0B,QAAA,CAAWP,CAAX,CARA,CAFkB,CAApB,CARuD,CAAzD;",
"sources":["splendid/comps/privacy.js"],
"sourcesContent":["import __initBottom from './__init/bottom'\nimport '../js/load-background-img'\nimport makeClassGetter from './__mcg'\nconst renameMaps = {  }\n__initBottom()\nimport { makeIo, init, startPlain } from './__competent-lib'\nimport Parallax from 'splendid/build/components/parallax'\n\nconst __components = {\n  'parallax': Parallax,\n}\n\nconst io = makeIo()\n\nconst meta = [{\n  key: 'parallax',\n  id: 'c8757',\n  props: {\n    'background-image': '../articles/img/tile.jpg',\n  },\n}]\nmeta.forEach(({ key, id, props = {}, children = [] }) => {\n  const Comp = __components[key]\n  const plain = true\n  props.splendid = { mount: '/', addCSS(stylesheet) {\n    return makeClassGetter(renameMaps[stylesheet])\n  } }\n\n  const ids = id.split(',')\n  ids.forEach((Id) => {\n    const { parent, el } = init(Id, key)\n    if (!el) return\n    const renderMeta = /** @type {_competent.RenderMeta} */ ({ key, id: Id, plain })\n    let comp\n    el.render = () => {\n      comp = startPlain(renderMeta, Comp, comp, el, parent, props, children)\n      return comp\n    }\n    el.render.meta = renderMeta\n    io.observe(el)\n  })\n})\n"],
"names":["renameMaps","__initBottom","__components","Parallax","io","makeIo","meta","key","id","props","forEach","children","Comp","splendid","mount","addCSS","stylesheet","makeClassGetter","split","ids","Id","init","parent","el","renderMeta","plain","comp","render","el.render","startPlain","observe"]
}
