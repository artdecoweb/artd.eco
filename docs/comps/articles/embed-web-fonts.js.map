{
"version":3,
"file":"docs/comps/articles/embed-web-fonts.js",
"lineCount":4,
"mappings":"AAGA,IAAMA,GAAa,EACnBC,EAAA,EAOA,KAAMC,GAAe,CACnB,YAAeC,CADI,CAEnB,SAAYC,CAFO,CAGnB,iBAAkBC,CAHC,CAArB,CAMMC,GAAKC,CAAA,EAGEC;CAAC,CACZC,IAAK,aADO,CAEZC,GAAI,OAFQ,CAGZC,MAAO,CACLC,KAAM,gBADD,CAHK,CAADJ,CAOb,CACEC,IAAK,aADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLC,KAAM,OADD,CAHT,CAPaJ,CAcb,CACEC,IAAK,aADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLC,KAAM,SADD,CAHT,CAdaJ,CAqBb,CACEC,IAAK,gBADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLE,IAAK,kEADA,CAELL,EAAM,MAFD,CAHT,CArBaA,CA6Bb,CACEC,IAAK,aADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLC,KAAM,YADD,CAHT,CA7BaJ,CAoCb,CACEC,IAAK,gBADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLE,IAAK,kEADA,CAELC,KAAM,IAFD,CAGLN,EAAM,MAHD,CAHT,CApCaA,CA6Cb,CACEC,IAAK,UADP,CAEEC,GAAI,OAFN;AAGEC,MAAO,CACL,mBAAoB,gBADf,CAHT,CA7CaH,CAoDb,CACEC,IAAK,aADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLC,KAAM,KADD,CAHT,CApDaJ,CA2Db,CACEC,IAAK,aADP,CAEEC,GAAI,OAFN,CAGEC,MAAO,CACLC,KAAM,oBADD,CAHT,CA3DaJ,CAkEb,CACEC,IAAK,UADP,CAEEC,GAAI,4BAFN,CAGEC,MAAO,CACL,mBAAoB,6BADf,CAELI,EAAQ,MAFH,CAHT,CAlEaP,CA0EbQ,QAAA,CAAa,QAAA,CAAC,CAAD,CAA4C,CAAzC,IAAAP,EAAF,CAAE,IAAA,CAAKC,EAAP,CAAO,GAAL,CAASC,EAAA,IAAA,EAAA,GAAX,CAAW,MAAA,CAAQ,EAAR,CAAX,CAAW,MAAT,CAAqBM,EAAA,IAAA,EAAA,GAAvB,CAAuB,SAAA,CAAW,EAAX,CAAvB,CAAuB,SAArB,CACRC,EAAOhB,EAAA,CAAaO,CAAb,CADC,CAERU,EAAQD,CAAAC,MAARA,EAAuB,cAAAC,KAAA,CAAoBF,CAAAG,SAAA,EAApB,CAAvBF,EAA+D,CAACG,CAAAC,cAAA,CAAwBL,CAAxB,CACtEP,EAAAa,EAAA,CAAiB,CAAE,EAAAC,QAAM,CAACC,CAAD,CAAa,CACpC,MAAOC,EAAA,CAAgB3B,EAAA,CAAW0B,CAAX,CAAhB,CAD6B,CAArB,CAILhB,EAAAkB,MAAAC,CAAS,GAATA,CACZb,QAAA,CAAY,QAAA,CAACc,CAAD,CAAQ,CACZ,IAAA;AAAiBC,CAAA,CAAKD,CAAL,CAASrB,CAAT,CAAjB,CAAEuB,EAAA,CAAA,OAAF,CAAUC,EAAA,CAAA,EAAV,CACAC,EAAmD,CAAEzB,IAAAA,CAAF,CAAOC,GAAIoB,CAAX,CAAeX,MAAAA,CAAf,CADnD,CAEFgB,CACJF,EAAAG,OAAA,CAAYC,QAAA,EAAM,CAEhB,MADAF,EACA,CADOG,CAAA,CAAMJ,CAAN,CAAkBhB,CAAlB,CAAwBiB,CAAxB,CAA8BF,CAA9B,CAAkCD,CAAlC,CAA0CrB,CAA1C,CAAiDM,CAAjD,CADS,CAIlBgB,EAAAG,OAAA5B,EAAA,CAAiB0B,CACjB5B,GAAAiC,QAAA,CAAWN,CAAX,CATkB,CAApB,CARuD,CAAzD;",
"sources":["splendid/comps/articles/embed-web-fonts.js"],
"sourcesContent":["import __initBottom from '../__init/bottom'\nimport '../../js/load-background-img'\nimport makeClassGetter from '../__mcg'\nconst renameMaps = {  }\n__initBottom()\nimport { Component, render, h } from '@externs/preact'\nimport { makeIo, init, start } from '../__competent-lib'\nimport Highlightjs from 'splendid/build/components/highlightjs'\nimport Parallax from 'splendid/build/components/parallax'\nimport SocialButtons from 'splendid/build/components/social-buttons'\n\nconst __components = {\n  'highlightjs': Highlightjs,\n  'parallax': Parallax,\n  'social-buttons': SocialButtons,\n}\n\nconst io = makeIo()\n\n/** @type {!Array<!preact.PreactProps>} */\nconst meta = [{\n  key: 'highlightjs',\n  id: 'c6ce5',\n  props: {\n    lang: 'xml,javascript',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c724c',\n  props: {\n    lang: 'shell',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c1602',\n  props: {\n    lang: 'xml,css',\n  },\n},\n{\n  key: 'social-buttons',\n  id: 'c6a73',\n  props: {\n    url: 'https://www.artd.eco/articles/embedding-critical-path-fonts.html',\n    meta: 'true',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'ccdbf',\n  props: {\n    lang: 'javascript',\n  },\n},\n{\n  key: 'social-buttons',\n  id: 'c9f74',\n  props: {\n    url: 'https://www.artd.eco/articles/embedding-critical-path-fonts.html',\n    size: '24',\n    meta: 'true',\n  },\n},\n{\n  key: 'parallax',\n  id: 'c0c34',\n  props: {\n    'background-image': './img/tile.jpg',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'c1d47',\n  props: {\n    lang: 'css',\n  },\n},\n{\n  key: 'highlightjs',\n  id: 'cbdf7',\n  props: {\n    lang: 'xml,javascript,css',\n  },\n},\n{\n  key: 'parallax',\n  id: 'c709f,c709f1,c709f2,c709f3',\n  props: {\n    'background-image': '/img/letters/background.png',\n    speedy: '-0.5',\n  },\n}]\nmeta.forEach(({ key, id, props = {}, children = [] }) => {\n  const Comp = __components[key]\n  const plain = Comp.plain || (/^\\s*class\\s+/.test(Comp.toString()) && !Component.isPrototypeOf(Comp))\n  props.splendid = { addCSS(stylesheet) {\n    return makeClassGetter(renameMaps[stylesheet])\n  } }\n\n  const ids = id.split(',')\n  ids.forEach((Id) => {\n    const { parent, el } = init(Id, key)\n    const renderMeta = /** @type {_competent.RenderMeta} */ ({ key, id: Id, plain })\n    let comp\n    el.render = () => {\n      comp = start(renderMeta, Comp, comp, el, parent, props, children, { render, Component, h })\n      return comp\n    }\n    el.render.meta = renderMeta\n    io.observe(el)\n  })\n})\n"],
"names":["renameMaps","__initBottom","__components","Highlightjs","Parallax","SocialButtons","io","makeIo","meta","key","id","props","lang","url","size","speedy","forEach","children","Comp","plain","test","toString","Component","isPrototypeOf","splendid","addCSS","stylesheet","makeClassGetter","split","ids","Id","init","parent","el","renderMeta","comp","render","el.render","start","observe"]
}
