{
"version":3,
"file":"docs/js/menu.js",
"lineCount":229,
"mappings":"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A,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,yCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,IAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,wCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA,CAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAAA,CAAA,SAAA,IAAA,CAAA,gBAAA,uCAAA,CAAA,CAAA,CAAA;AAAA,CAAA,IAAA,KAAA,CAAA,QAAA,CAAA,CAAA,QAAA,MAA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",
"sources":["node_modules/@artdeco/snapsvg-animator/src/garbagePool.js"," [synthetic:es6/util/arrayiterator] "," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "," [synthetic:util/defineproperty] "," [synthetic:util/global] "," [synthetic:util/polyfill] "," [synthetic:es6/array/find] "," [synthetic:util/findinternal] ","node_modules/@artdeco/snapsvg-animator/src/bitmap.js","node_modules/@artdeco/snapsvg-animator/src/resourceManager.js","node_modules/@artdeco/snapsvg-animator/src/shape.js","node_modules/@artdeco/snapsvg-animator/src/text.js","node_modules/@artdeco/snapsvg-animator/src/commands.js","node_modules/@artdeco/snapsvg-animator/src/movieclip.js","node_modules/@artdeco/snapsvg-animator/src/component.js","splendid/js/menu.json","splendid/js/menu.js"],
"sourcesContent":["// class GarbagePool {\n\n// }\n/**\n * @constructor\n */\nvar GarbagePool = function () {\n  this.EMPTY_POOL = []      //if empty remove\n  this.REF_POOL = []        //if no reference remove\n}\n\nGarbagePool.prototype.addEmpty = function (el) {\n  this.EMPTY_POOL.push(el)\n}\n\n/**\n * manages adding of references\n *\n */\nGarbagePool.prototype.addRef = function (el, refs) {\n  var i,\n    j\n\n  for (i = 0; i < this.REF_POOL.length; i += 1) {\n    if (this.REF_POOL[i].el.id == el.id) {\n      for (j = 0; j < refs.length; j += 1) {\n        this.REF_POOL[i].refs.push(refs[j])\n      }\n      return\n    }\n  }\n\n  this.REF_POOL.push({ el: el, refs: refs })\n}\n\nGarbagePool.prototype.purge = function () {\n  this.purgeEmptyPool()\n  this.purgeRefPool()\n}\n\n/**\n * check if empty and remove\n *\n */\nGarbagePool.prototype.purgeEmptyPool = function () {\n  var i,\n    el\n\n  for (i = this.EMPTY_POOL.length - 1; i > -1; i -= 1) {\n    el = this.EMPTY_POOL[i]\n    if (el.children().length === 0) {\n      el.remove()\n      this.EMPTY_POOL.splice(i, 1)\n    }\n  }\n}\n\n/**\n * check if all references are removed then remove\n *\n */\nGarbagePool.prototype.purgeRefPool = function () {\n  var i,\n    j,\n    k,\n    item\n\n  for (i = this.REF_POOL.length - 1; i > -1; i -= 1) {\n    item = this.REF_POOL[i]\n    k = 0\n\n    for (j = 0; j < item.refs.length; j += 1) {\n      if (item.refs[j].removed) {\n        k += 1\n      }\n\n      if (k == item.refs.length) {\n        item.el.remove()\n        this.REF_POOL.splice(i, 1)\n      }\n    }\n  }\n}\n\nvar GP = new GarbagePool()\n\nexport { GarbagePool }\nexport default GP","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require es6/util/makeiterator';\n'require es6/util/arrayfromiterator';\n\n\n/**\n * Copies the values from an Iterable into an Array.\n * @param {string|!Array<T>|!Iterable<T>|!Arguments<T>} iterable\n * @return {!Array<T>}\n * @template T\n */\n$jscomp.arrayFromIterable = function(iterable) {\n  if (iterable instanceof Array) {\n    return iterable;\n  } else {\n    return $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n  }\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require base';\n\n\n/**\n * Copies the values from an Iterator into an Array. The important difference\n * between this and $jscomp.arrayFromIterable is that if the iterator's\n * next() method has already been called one or more times, this method returns\n * only the values that haven't been yielded yet.\n * @param {!Iterator<T>} iterator\n * @return {!Array<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.arrayFromIterator = function(iterator) {\n  var i;\n  var arr = [];\n  while (!(i = iterator.next()).done) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n * @suppress {reportUnknownTypes}\n */\n'require util/defines';\n\n\n/**\n * Polyfill for Object.defineProperty() method:\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/defineProperty\n *\n * Refuses to define properties on Array.prototype and Object.prototype,\n * since we can't make them non-enumerable and this messes up peoples' for\n * loops.  Beyond this, we simply assign values and not worry\n * about enumerability or writeability.\n * @param {?} target\n * @param {string} property\n * @param {?} descriptor\n * @suppress {reportUnknownTypes}\n */\n$jscomp.defineProperty =\n    $jscomp.ASSUME_ES5 || typeof Object.defineProperties == 'function' ?\n    Object.defineProperty :\n    function(target, property, descriptor) {\n      descriptor = /** @type {!ObjectPropertyDescriptor} */ (descriptor);\n      // NOTE: This is currently never called with a descriptor outside\n      // the control of the compiler.  If we ever decide to polyfill either\n      // Object.defineProperty or Reflect.defineProperty for ES3, we should\n      // explicitly check for `get` or `set` on the descriptor and throw a\n      // TypeError, since it's impossible to properly polyfill it.\n      if (target == Array.prototype || target == Object.prototype) return;\n      target[property] = descriptor.value;\n    };\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Runtime code to store the global object.\n */\n'require base';\n\n\n/**\n * @param {!Object} maybeGlobal\n * @return {!Object} The global object.\n * @suppress {undefinedVars|reportUnknownTypes}\n */\n$jscomp.getGlobal = function(maybeGlobal) {\n  // This logic can be simplified to be made more optimizable.\n  return (typeof window != 'undefined' && window === maybeGlobal) ?\n      maybeGlobal :\n      (typeof global != 'undefined' && global != null) ?\n      /** @type {!Object} */ (global) :\n      maybeGlobal;\n};\n\n\n// TODO(sdh): This should be typed as \"the global object\" now that the type\n// of \"Global\" has landed in the type system.\n/**\n * The global object. For browsers we could just use `this` but in Node that\n * doesn't work.\n * @const {?}\n */\n$jscomp.global = $jscomp.getGlobal(this);\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Provides methods to polyfill native objects.\n */\n'require util/defineproperty';\n'require util/global';\n\n\n/**\n * @param {string} target Qualified name of the class or method to polyfill,\n *     e.g. 'Array.prototype.includes' or 'Map'.\n * @param {?function(*): *} polyfill A function that takes the current browser\n *     implementation of the target and returns an optional new polyfill\n *     implementation.  If null is returned, then no polyfill will be added.  A\n *     null argument for this parameter indicates that the function will not be\n *     polyfilled, and is only useful for `build_polyfill_table.js` bookkeeping.\n * @param {string} fromLang The language level in which the target is expected\n *     to already be present in the browser.  The compiler requires that\n *     `languageOut < fromLang` before injecting a polyfill (i.e. if the\n *     specified output language already includes the feature then there's no\n *     need to polyfill it).\n * @param {string} toLang The language level required by the polyfill\n *     implementation.  The compiler will issue an error if a polyfill is\n *     required, but `languageOut < toLang`.  Additionally, the\n *     `build_polyfill_table.js` script audits the polyfill dependency tree to\n *     ensure that no polyfill with a lower `toLang` depends on one with a\n *     higher `toLang`.\n * @suppress {reportUnknownTypes}\n * @noinline\n * NOTE: We prevent inlining so RemoveUnusedPolyfills can always recognize this\n * call.\n */\n$jscomp.polyfill = function(target, polyfill, fromLang, toLang) {\n  if (!polyfill) return;\n  var obj = $jscomp.global;\n  var split = target.split('.');\n  for (var i = 0; i < split.length - 1; i++) {\n    var key = split[i];\n    if (!(key in obj)) obj[key] = {};  // Might want to be defineProperty.\n    obj = obj[key];\n  }\n  var property = split[split.length - 1];\n  var orig = obj[property];\n  var impl = polyfill(orig);\n  if (impl == orig || impl == null) return;\n  $jscomp.defineProperty(\n      obj, property, {configurable: true, writable: true, value: impl});\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n'require util/findinternal';\n'require util/polyfill';\n\n$jscomp.polyfill('Array.prototype.find', function(orig) {\n  if (orig) return orig;\n\n  /**\n   * Finds and returns an element that satisfies the given predicate.\n   *\n   * @this {!IArrayLike<VALUE>}\n   * @param {function(this: THIS, VALUE, number, !IArrayLike<VALUE>): *}\n   *     callback\n   * @param {THIS=} opt_thisArg\n   * @return {VALUE|undefined} The found value, or undefined.\n   * @template VALUE, THIS\n   * @suppress {reportUnknownTypes}\n   */\n  var polyfill = function(callback, opt_thisArg) {\n    return $jscomp.findInternal(this, callback, opt_thisArg).v;\n  };\n\n  return polyfill;\n}, 'es6', 'es3');\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility for Array methods that find elements.\n */\n'require base';\n\n// TODO(sdh): would be nice to template on the ARRAY type as well,\n// so that the third arg type of callback can be refined to be\n// exactly the same as the array type, but then there's no way to\n// enforce that it must, in fact, be an array.\n/**\n * Internal implementation of find.\n * @param {!IArrayLike<VALUE>} array\n * @param {function(this: THIS, VALUE, number, !IArrayLike<VALUE>): *} callback\n * @param {THIS} thisArg\n * @return {{i: number, v: (VALUE|undefined)}}\n * @template THIS, VALUE\n * @suppress {reportUnknownTypes}\n */\n$jscomp.findInternal = function(array, callback, thisArg) {\n  if (array instanceof String) {\n    array = /** @type {!IArrayLike} */ (String(array));\n  }\n  var len = array.length;\n  for (var i = 0; i < len; i++) {\n    var value = array[i];\n    if (callback.call(thisArg, value, i, array)) return {i: i, v: value};\n  }\n  return {i: -1, v: void 0};\n};\n","/**\n * @constructor\n */\nvar Bitmap = function (parentMC, resourceManager, charId, ObjectId, placeAfter, transform) {\n  var instance = this,\n    parentEl = parentMC.el\n\n  this.create = function () {\n    instance.el = parentMC.el.g()\n    instance.id = ObjectId\n    instance.el.attr({ 'class': 'shape', 'token': instance.id })\n\n    instance.children = []\n    instance.isMask = false\n    instance.isMasked = false\n    instance.mask = null\n    instance.maskTill = null\n\n    for(var b =0;b<resourceManager.m_data.DOMDocument.Bitmaps.length;b++)\n    {\n      if(resourceManager.m_data.DOMDocument.Bitmaps[b].charid == charId)\n      {\n        var path = resourceManager.m_data.DOMDocument.Bitmaps[b].bitmapPath\n        var bitmap = parentMC.el.paper.image(path)\n        instance.el.add(bitmap)\n      }\n    }\n\n    const transformArray = transform.split(\",\")\n    const transformMat = new window.Snap.Matrix(...transformArray)\n    instance.el.transform(transformMat)\n\n    if (placeAfter && parseInt(placeAfter, 10) !== 0) {\n      const afterMC = parentMC.getChildById(parseInt(placeAfter, 10))\n\n      if (afterMC.isMasked) {  //if masked add outside mask group\n        afterMC.el.parent().before(instance.el)\n      } else {\n        afterMC.el.before(instance.el)\n      }\n    } else {\n      parentEl.add(instance.el) //TODO:: handle after\n    }\n  }\n\n  this.create()\n}\n\nexport default Bitmap","export default class ResourceManager {\n  /**\n   * @param {_snapsvgAnimator.Data} data The data type.\n   * @param {DOMDocument} data.DOMDocument The DOMDocument.\n   */\n  constructor(data) {\n    var id\n    this.m_shapes = []\n    this.m_movieClips = []\n    this.m_bitmaps = []\n    this.m_text = []\n    this.m_data = data\n\n    //Parse shapes and movieClips\n    for (let shapeIndex = 0; shapeIndex < this.m_data.DOMDocument.Shape.length; shapeIndex++)\n    {\n      id = this.m_data.DOMDocument.Shape[shapeIndex].charid\n      var shapeData = this.m_data.DOMDocument.Shape[shapeIndex]\n      this.m_shapes[id] = shapeData\n    }\n\n    for (let bitmapIndex=0; bitmapIndex < this.m_data.DOMDocument.Bitmaps.length; bitmapIndex++)\n    {\n      id = this.m_data.DOMDocument.Bitmaps[bitmapIndex].charid\n      var bitmapData = this.m_data.DOMDocument.Bitmaps[bitmapIndex]\n      this.m_bitmaps[id] = bitmapData\n    }\n\n    for(var textIndex =0; textIndex < this.m_data.DOMDocument.Text.length; textIndex++)\n    {\n      id = this.m_data.DOMDocument.Text[textIndex].charid\n      var textData = this.m_data.DOMDocument.Text[textIndex]\n      this.m_text[id] = textData\n    }\n\n    if(this.m_data.DOMDocument.Timeline !== undefined)\n    {\n      for(var movieClipIndex =0; movieClipIndex < this.m_data.DOMDocument.Timeline.length - 1; movieClipIndex++)\n      {\n        id = this.m_data.DOMDocument.Timeline[movieClipIndex].charid\n        var movieClipData = this.m_data.DOMDocument.Timeline[movieClipIndex]\n        this.m_movieClips[id] = movieClipData\n      }\n    }\n  }\n  getText(id) {\n    return this.m_text[id]\n  }\n  getBitmap(id) {\n    return this.m_bitmaps[id]\n  }\n  getMovieClip(id) {\n    return this.m_movieClips[id]\n  }\n  getShape(id) {\n    return this.m_shapes[id]\n  }\n}\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Data} _snapsvgAnimator.Data\n */","import MovieClip from './movieclip' // eslint-disable-line\nimport ResourceManager from './resourceManager' // eslint-disable-line\n\nexport default class Shape {\n  /**\n   * @param {!MovieClip} parentMC\n   * @param {!ResourceManager} resourceManager\n   * @param {string} charId\n   * @param {string} ObjectId\n   * @param {string} placeAfter\n   * @param {string} transform\n   */\n  constructor(parentMC, resourceManager, charId, ObjectId, placeAfter, transform) {\n    const parentEl = parentMC.el\n    this.parentEl = parentEl\n\n    this.el = parentMC.el.g()\n    this.id = ObjectId\n    this.el.attr({ 'class': 'shape', 'token': this.id })\n\n    this.children = []\n    this.isMask = false\n    this.isMasked = false\n    this.mask = null\n    this.maskTill = null\n\n    this.resourceManager = resourceManager\n\n    for (let j = 0; j < resourceManager.m_data.DOMDocument.Shape.length; j++)\n    {\n      if (resourceManager.m_data.DOMDocument.Shape[j].charid == charId)\n      {\n        for (let k = 0; k < resourceManager.m_data.DOMDocument.Shape[j].path.length; k++)\n        {\n          this.addPath(j, k)\n        }\n      }\n    }\n\n    const transformArray = transform.split(\",\")\n    const transformMat = new window.Snap.Matrix(...transformArray)\n    this.el.transform(transformMat)\n\n    if (placeAfter && parseInt(placeAfter, 10) !== 0) {\n      const afterMC = parentMC.getChildById(parseInt(placeAfter, 10))\n\n      if (afterMC.isMasked) {  //if masked add outside mask group\n        afterMC.el.parent().before(this.el)\n      } else {\n        afterMC.el.before(this.el)\n      }\n    } else {\n      parentEl.add(this.el) //TODO:: handle after\n    }\n  }\n  /**\n   * @param {number} j\n   * @param {number} k\n   */\n  addPath(j, k) {\n    const shape = this.el.path()\n    const resourcePath = this.resourceManager.m_data.DOMDocument.Shape[j].path[k]\n    const path = resourcePath.d\n    shape.attr({\n      'fill': 'transparent',\n      'd': path,\n    })\n\n    if(resourcePath.pathType == \"Fill\") {\n      this.addFill(shape, resourcePath)\n    } else if (resourcePath.pathType == \"Stroke\") {\n      addStroke(shape, resourcePath)\n    }\n  }\n  /**\n   * @param {_snapsvgAnimator.ResourceImage} resourceImg\n   */\n  getFillImage(resourceImg) {\n    const patternArray = resourceImg.patternTransform.split(\",\")\n    const mat = new window.Snap.Matrix(...patternArray)\n\n    const src = resourceImg.bitmapPath\n\n    const exists = this.parentEl.paper.select('defs pattern image')\n\n    let fillImage\n    if (exists) {\n      if (exists.attr('href') == src) {\t//check if image href matches as well as other props\n        fillImage = exists.parent()\n      } else {\n        fillImage = this.newPattern(src, resourceImg, mat)\n      }\n    } else {\n      fillImage = this.newPattern(src, resourceImg, mat)\n    }\n\n    return fillImage\n  }\n  /**\n   * @param {_snapsvgAnimator.Gradient} grad\n   * @param {string} type\n   * @param {_snap.Paper} [shape]\n   */\n  getFillGradient(grad, type, shape) {\n    let gradientString\n    if (type == 'linear') {\n      const _x = parseFloat(grad.x1)\n      const _y = parseFloat(grad.y1)\n      const _x2 = parseFloat(grad.x2)\n      const _y2 = parseFloat(grad.y2)\n      gradientString = \"L(\"\n      gradientString += _x + \", \"\n      gradientString += _y + \", \"\n      gradientString += _x2 + \", \"\n      gradientString += _y2 + \")\"\n    } else {\n      const _x = (shape.getBBox().x + shape.getBBox().width / 2) + grad.cx / 10\n      const _y = (shape.getBBox().y + shape.getBBox().height / 2) + grad.cy / 10\n      const _fx = (shape.getBBox().x + shape.getBBox().width / 2) + parseFloat(grad.fx)\n      const _fy = (shape.getBBox().y + shape.getBBox().height / 2) + parseFloat(grad.fy)\n      gradientString = \"R(\"\n      gradientString += _x + \", \"\n      gradientString += _y + \", \"\n      gradientString += grad.r + \", \"\n      gradientString += _fx + \", \"\n      gradientString += _fy + \")\"\n    }\n\n    for (let i = 0; i < grad.stop.length; i += 1) {\n      const { r, g, b } = hexToRgb(grad.stop[i].stopColor)\n      gradientString += 'rgba(' + r + ',' + g + ',' + b + ',' + grad.stop[i].stopOpacity + ')'\n      gradientString += \":\"\n      gradientString += grad.stop[i].offset\n      if (i !== grad.stop.length-1) {\n        gradientString += \"-\"\n      }\n    }\n\n    const gradientFill = this.parentEl.paper.gradient(gradientString)\n    return gradientFill\n  }\n  /**\n   * @param {string} src\n   * @param {_snapsvgAnimator.ResourceImage} resourceImg\n   * @param {_snap.Matrix} mat\n   */\n  newPattern(src, resourceImg, mat) {\n    const image = this.el.image(src)\n    const pattern = image.pattern(0, 0, resourceImg.width, resourceImg.height)\n    pattern.attr({ 'x': mat.e, 'y': mat.f })\n\n    return pattern\n  }\n  /**\n   * @param {_snap.Paper} shape\n   * @param {_snapsvgAnimator.ResourcePath} resourcePath\n   */\n  addFill(shape, resourcePath) {\n    var fillColor,\n      fillImage,\n      fillGradient,\n      img,\n      grad\n\n    if (resourcePath.color) {\n      fillColor = getFillColor(resourcePath)\n      shape.attr({ 'fill': fillColor })\n    }\n    if (resourcePath.image) {\n      img = resourcePath.image\n      fillImage = this.getFillImage(img)\n      shape.attr({ 'fill': fillImage })\n    }\n    if (resourcePath.linearGradient) {\n      grad = resourcePath.linearGradient\n      fillGradient = this.getFillGradient(grad, 'linear')\n      shape.attr({ 'fill': fillGradient })\n    }\n    if (resourcePath.radialGradient) {\n      grad = resourcePath.radialGradient\n      fillGradient = this.getFillGradient(grad, 'radial', shape)\n      shape.attr({ 'fill': fillGradient })\n    }\n  }\n}\n\n/**\n * @param {_snap.Paper} shape\n * @param {!Array<_snapsvgAnimator.ResourcePath>} shape.path The paths.\n * @param {_snapsvgAnimator.ResourcePath} resourcePath\n */\nfunction addStroke(shape, resourcePath) {\n  if (resourcePath.color) {\n    const clr = resourcePath.color\n\n    const r = parseInt(clr.substring(1, 3), 16)\n    const g = parseInt(clr.substring(3, 5), 16)\n    const b = parseInt(clr.substring(5, 7), 16)\n    const a = resourcePath.colorOpacity\n\n    const colStr = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'\n\n    shape.attr({ 'stroke': colStr, 'strokeWidth': resourcePath.strokeWidth })\n  }\n}\n\n/**\n * @param {_snapsvgAnimator.ResourcePath} resourcePath\n */\nfunction getFillColor(resourcePath) {\n  const clr = resourcePath.color\n  const r = parseInt(clr.substring(1, 3), 16)\n  const g = parseInt(clr.substring(3, 5), 16)\n  const b = parseInt(clr.substring(5, 7), 16)\n  const a = resourcePath.colorOpacity\n  const colStr = 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')'\n\n  return colStr\n}\n\nfunction hexToRgb(hex) {\n  const result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex)\n  return result ? {\n    r: parseInt(result[1], 16),\n    g: parseInt(result[2], 16),\n    b: parseInt(result[3], 16),\n  } : null\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ResourcePath} _snapsvgAnimator.ResourcePath\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Shape} _snapsvgAnimator.Shape\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').ResourceImage} _snapsvgAnimator.ResourceImage\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Gradient} _snapsvgAnimator.Gradient\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Snap} _snapsvgAnimator.Snap\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Paper} _snap.Paper\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Matrix} _snap.Matrix\n */","export default class Text {\n  constructor(parentMC, resourceManager, charId, ObjectId, placeAfter, transform, bounds) {\n    this.parentEl = parentMC.el\n    this.bounds = bounds\n\n    this.el = this.parentEl.g()\n    this.id = ObjectId\n    this.el.attr({ 'class': 'text', 'token': this.id })\n\n    this.children = []\n    this.isMask = false\n    this.isMasked = false\n    this.mask = null\n    this.maskTill = null\n\n    for (let j = 0; j < resourceManager.m_data.DOMDocument.Text.length; j++)\n    {\n      if (resourceManager.m_data.DOMDocument.Text[j].charid == charId)\n      {\n        this.addText(resourceManager.m_data.DOMDocument.Text[j])\n      }\n    }\n\n    const transformArray = transform.split(\",\")\n    const transformMat = new window.Snap.Matrix(...transformArray)\n    this.el.transform(transformMat)\n\n    if (placeAfter && parseInt(placeAfter, 10) !== 0) {\n      const afterMC = parentMC.getChildById(parseInt(placeAfter, 10))\n\n      if (afterMC.isMasked) {  //if masked add outside mask group\n        afterMC.el.parent().before(this.el)\n      } else {\n        afterMC.el.before(this.el)\n      }\n    } else {\n      this.parentEl.add(this.el)\n    }\n  }\n  addText(data) {\n    var text,\n      textBox,\n      textX,\n      textY,\n      lineMode,\n      fontSize,\n      fontName,\n      fontColor,\n      textAlign,\n      textAnchor,\n      textBaseline,\n      textBounds,\n      textStyles\n\n    textBox = this.el.g()\n\n    if (this.bounds) {\n      textBounds = this.bounds.split(',')\n    } else {\n      textBounds = [0, 0, 200, 100]\n    }\n\n    lineMode = data.behaviour.lineMode\n    textAlign = data.paras[0].alignment\n    textBaseline = lineMode == 'single' ? 'central' : 'auto'\n    fontSize = data.paras[0].textRun[0].style.fontSize\n    fontName = data.paras[0].textRun[0].style.fontName\n    fontColor = data.paras[0].textRun[0].style.fontColor\n    const letterSpacing = data.paras[0].textRun[0].style.letterSpacing\n\n    if (textAlign == 'left') {\n      textAnchor = 'start'\n    } else if (textAlign == 'center') {\n      textAnchor = 'middle'\n    } else if (textAlign == 'right') {\n      textAnchor = 'end'\n    }\n\n    textStyles = {\n      'text-anchor': textAnchor,\n      'dominant-baseline': textBaseline,\n      'font-family': fontName,\n      'font-size': fontSize,\n      'letter-spacing': letterSpacing,\n      'fill': fontColor,\n    }\n\n    //rect\n    if (data.behaviour.isBorderDrawn !== \"false\") {\n      const textRect = textBox.rect(textBounds[0], textBounds[1], textBounds[2], textBounds[3])\n      textRect.attr({\n        stroke: 'black',\n        fill: 'transparent',\n      })\n    }\n\n    //make text and y\n    if (lineMode == 'single') {\n      text = textBox.text(0, 0, data.txt)\n      textY = parseFloat(textBounds[1]) + (parseFloat(textBounds[3]) / 2)\n    } else {\n      text = this.multiline(textBox, data, textBounds, textStyles)\n      textY = parseFloat(textBounds[1]) - (parseFloat(data.paras[0].linespacing) * 2)\n    }\n\n    //x\n    if (textAlign == 'left') {\n      textX = parseFloat(textBounds[0])\n    } else {\n      textX = parseFloat(textBounds[0]) + (parseFloat(textBounds[2]) / 2)\n    }\n\n    text.attr(textStyles)\n    text.transform('translate(' + textX + ',' + textY + ')')\n  }\n  multiline(textBox, data, textBounds, textStyles) {\n    var spans = [],\n      chars = '',\n      substr,\n      tempTxt,\n      boundsWidth = parseFloat(textBounds[2]),\n      sp,\n      bbox,\n      i = 0\n\n    //break into spans\n    while (i > -1) {\n      chars += data.txt.charAt(i)\n      tempTxt = textBox.text(0, 0, chars)\n      tempTxt.attr(textStyles)\n\n      bbox = tempTxt.getBBox()\n\n      const newIndex = chars.lastIndexOf(' ')\n\n      if (bbox.w > boundsWidth) {\n        substr = chars.slice(0, newIndex)\n        spans.push(substr)\n        i = i - (chars.length - substr.length) + 2\n        chars = ''\n      } else {\n        i += 1\n      }\n\n      if (i >= data.txt.length) {\n        substr = chars.slice(0, newIndex)\n        spans.push(substr)\n        i = -1\n      }\n\n      tempTxt.remove()\n    }\n\n    const text = textBox.text(0, 0, spans)\n    sp = text.selectAll('tspan')\n    sp.attr({\n      'x': 0,\n      'dy': bbox.h + parseFloat(data.paras[0].linespacing),\n    })\n\n    return text\n  }\n}","import Bitmap from './bitmap'\nimport GP from './garbagePool'\nimport MovieClip from './movieclip'\nimport Shape from './shape'\nimport Text from './text'\nimport ResourceManager from './resourceManager'\n\nconst CMD = {}\n\n//PlaceObjectCommand Class\n/**\n * @constructor\n */\nCMD.PlaceObjectCommand = function(charID, objectID, name, placeAfter, transform, bounds)\n{\n  this.m_charID = charID\n  this.m_objectID = objectID\n  this.m_name = name\n  this.m_placeAfter = placeAfter\n  this.m_transform = transform\n  this.m_bounds = bounds\n}\n\n//Execute function for PlaceObjectCommand\n/**\n * @param {!MovieClip} parentMC\n * @param {!ResourceManager} resourceManager\n */\nCMD.PlaceObjectCommand.prototype.execute = function(parentMC, resourceManager)\n{\n  const shape = resourceManager.getShape(this.m_charID)\n  const bitmap = resourceManager.getBitmap(this.m_charID)\n  const text = resourceManager.getText(this.m_charID)\n\n  if (shape !== null && shape !== undefined)\n  {\n    const shapeObject = new Shape(parentMC, resourceManager, this.m_charID, this.m_objectID, this.m_placeAfter, this.m_transform)\n    parentMC.insertAtIndex(shapeObject, this.m_placeAfter)\n  } else if (bitmap !== null && bitmap !== undefined) {\n    const bmpObject = new Bitmap(parentMC, resourceManager, this.m_charID, this.m_objectID, this.m_placeAfter, this.m_transform)\n    parentMC.insertAtIndex(bmpObject, this.m_placeAfter)\n  } else if (text !== null && text !== undefined) {\n    const textObject = new Text(parentMC, resourceManager, this.m_charID, this.m_objectID, this.m_placeAfter, this.m_transform, this.m_bounds)\n    parentMC.insertAtIndex(textObject, this.m_placeAfter)\n  } else {\n    const movieclipTimeline = resourceManager.getMovieClip(this.m_charID)\n    if (movieclipTimeline) {\n      const movieclip = new MovieClip(movieclipTimeline, parentMC, resourceManager, this.m_objectID, this.m_name, this.m_transform)\n      parentMC.insertAtIndex(movieclip, this.m_placeAfter)\n      movieclip.play()\n    }\n  }\n}\n\n//MoveObjectCommand Class\n/**\n * @constructor\n */\nCMD.MoveObjectCommand = function(objectID, transform)\n{\n  this.m_objectID = objectID\n  this.m_transform = transform\n}\n\n//Execute function for PlaceObjectCommand\nCMD.MoveObjectCommand.prototype.execute = function(parentMC)\n{\n  const transformArray = this.m_transform.split(',')\n  const transformMat = new window.Snap.Matrix(...transformArray)\n\n  const child = parentMC.getChildById(this.m_objectID)\n  child.matrix = transformMat\n  child.el.transform(transformMat)\n}\n\n//UpdateObjectCommand Class\n/**\n * @constructor\n */\nCMD.UpdateObjectCommand = function(objectID, placeAfter)\n{\n  this.m_objectID = objectID\n  this.m_placeAfter = placeAfter\n}\n\n//Execute function for UpdateObjectCommand\nCMD.UpdateObjectCommand.prototype.execute = function()\n{\n  //console.log('update', this.m_objectID, this.m_placeAfter);\n}\n\n//RemoveObjectCommand Class\n/**\n * @constructor\n */\nCMD.RemoveObjectCommand = function(objectID)\n{\n  this.m_objectID = objectID\n}\n\n//Execute function for RemoveObjectCommand\nCMD.RemoveObjectCommand.prototype.execute = function(parentMC)\n{\n  var child\n\n  child = parentMC.getChildById(this.m_objectID)\n  child.el.remove()\n  parentMC.removeChildById(this.m_objectID)\n}\n\n//UpdateVisbilityCommand Class\n/**\n * @constructor\n */\nCMD.UpdateVisibilityCommand = function(objectID,visibility)\n{\n  this.m_objectID = objectID\n  this.m_visibility = visibility\n}\n\n//Execute function for UpdateVisbilityCommand\nCMD.UpdateVisibilityCommand.prototype.execute = function(parentMC)\n{\n  var child,\n    visibleValue\n\n  child = parentMC.getChildById(this.m_objectID)\n  visibleValue = this.m_visibility == 'true' ? 'visible' : 'hidden'\n  child.el.attr({ 'visibility': visibleValue })\n}\n\n/**\n * @constructor\n */\nCMD.UpdateMaskCommand = function (objectID,maskTill)\n{\n  this.m_objectID = objectID\n  this.m_maskTill = maskTill\n}\n\nfunction updateMaskContent(parentMC, child) {\n  var def = child.maskElement,\n    orig = parentMC.getChildById(child.id)\n\n  def.clear()\n\n  const clone = orig.el.clone()\n  clone.attr({ visibility: 'visible' })\n\n  def.append(clone)\n}\n\nCMD.UpdateMaskCommand.prototype.execute = function (parentMC)\n{\n  //console.log('updatemask', this.m_objectID, this.m_maskTill);\n\n  var maskContent,\n    mask,\n    def\n\n  maskContent = parentMC.getChildById(this.m_objectID)\n  maskContent.isMask = true\n  maskContent.maskTill = this.m_maskTill\n\n  mask = parentMC.el.mask()\n  mask.attr('mask-type', 'alpha')\n\n  //use clone to keep element in DOM for placement, just hide\n  const clone = maskContent.el.clone()\n  clone.attr({ visibility: 'visible' })\n\n  def = mask.toDefs()\n  def.append(clone)\n  maskContent.maskElement = def\n\n  maskContent.el.attr({ visibility: 'hidden' })\n}\n\n/**\n * @constructor\n */\nCMD.ApplyMaskCommand = function () {\n\n}\n\n/**\n * create group for mask and add masked content\n */\nCMD.ApplyMaskCommand.prototype.execute = function (parentMC) {\n  var i,\n    insideMask = false,\n    currentMask = null,\n    currentMaskEl = null,\n    currentTill = null,\n    currentMaskGroup\n\n  for (i = 0; i < parentMC.children.length; i += 1) {\n    var child = parentMC.children[i]\n\n    if (child.isMask) {\n      updateMaskContent(parentMC, child) //mask needs to update\n\n      insideMask = true\n      currentMask = child\n      currentMaskEl = child.maskElement\n      currentTill = child.maskTill\n      currentMaskGroup = parentMC.el.g()\n      currentMaskGroup.attr({ 'class': 'maskGroup' })\n      child.el.after(currentMaskGroup)\n      currentMaskGroup.attr({ mask: currentMaskEl })\n\n      GP.addEmpty(currentMaskGroup)\n      GP.addRef(currentMaskEl, [currentMaskGroup])\n\n      if (child.id == child.maskTill) {\n        insideMask = false\n      }\n    } else {\n      if (insideMask) {\n        currentMaskGroup.prepend(child.el)\n        child.isMasked = true\n        child.mask = currentMask.id\n\n        if (child.id == currentTill) {\n          insideMask = false\n          currentMask = null\n          currentTill = null\n        }\n      }\n    }\n  }\n}\n\n/**\n * @constructor\n */\nCMD.UpdateColorTransformCommand = function (objectID, colorMatrix)\n{\n  this.m_objectID = objectID\n  this.m_colorMatrix = colorMatrix\n}\n\nCMD.UpdateColorTransformCommand.prototype.execute = function (parentMC)\n{\n  var child,\n    matrix\n\n  child = parentMC.getChildById(this.m_objectID)\n  matrix = this.m_colorMatrix.split(',', 7)\n  child.el.attr({ opacity: parseFloat(matrix[6]) }) //currently only alpha\n}\n\n/**\n * @constructor\n */\nCMD.AddFrameScriptCommand = function (scriptID, script)\n{\n  this.m_scriptID = scriptID\n  this.m_script = script\n}\n\nCMD.AddFrameScriptCommand.prototype.execute = function (parentMC)\n{\n  parentMC.addFrameScript(this.m_scriptID, this.m_script)\n}\n\n/**\n * @constructor\n */\nCMD.RemoveFrameScriptCommand = function (scriptID)\n{\n  this.m_scriptID = scriptID\n}\n\nCMD.RemoveFrameScriptCommand.prototype.execute = function (parentMC)\n{\n  parentMC.removeFrameScript(this.m_scriptID)\n}\n\n/**\n * @constructor\n */\nCMD.SetFrameLabelCommand = function (name)\n{\n  this.m_labelName = name\n}\n\nCMD.SetFrameLabelCommand.prototype.execute = function (){\n\n}\n\nexport default CMD","import GP from './garbagePool'\nimport CMD from './commands'\nimport ResourceManager from './resourceManager' // eslint-disable-line\n\n/**\n * @implements {_snapsvgAnimator.MovieClip}\n */\nexport default class MovieClip {\n  /**\n   * @param {_snapsvgAnimator.Timeline} commandTimeline\n   * @param {_snap.Paper|!MovieClip} s\n   * @param {ResourceManager} resourceManager\n   * @param {string} objectID\n   * @param {string} [name]\n   * @param {string} [transform]\n   */\n  constructor(commandTimeline, s, resourceManager, objectID, name, transform) {\n    /**\n     * @type {_snap.Paper}\n     */\n    const parentEl = s.type == 'svg' ? s : s.el  // parent is stage if svg\n\n    if (objectID) this.id = objectID\n\n    if (name) this.name = name\n\n    this.el = parentEl.g()\n    this.el.attr({ 'class': 'movieclip', 'token': this.id })\n    this.transform = transform\n\n    this.m_timeline = commandTimeline\n    this.m_currentFrameNo = 0\n    this.m_frameCount = this.m_timeline.frameCount\n\n    this._scripts = {}\n    this._labels = []\n    /**\n     * @type {!Array<!MovieClip>}\n     */\n    this.children = []\n    this.isMask = false\n    this.isMasked = false\n    this.mask = null\n    this.maskElement = null\n    this.maskTill = null\n    this.loops = true\n    this.playing = true\n    this.resourceManager = resourceManager\n    this.commandList = []\n    /**\n     * @type {_snap.Matrix}\n     */\n    this.matrix = new window.Snap.Matrix()\n\n    if (this.m_timeline.Label) {\n      this._labels = this.m_timeline.Label\n    }\n\n    if (this.transform) {\n      const transformArray = this.transform.split(',')\n      this.matrix = new window.Snap.Matrix(...transformArray)\n      this.el.transform(this.matrix)\n    }\n  }\n  addChild(child, placeAfter) {\n    placeAfter = placeAfter ? placeAfter : 0\n    this.insertAtIndex(child, placeAfter)\n  }\n  /**\n   * @param {!MovieClip} child\n   * @param {string} [placeAfter]\n   */\n  _addChild(child, placeAfter) {\n    if (child.name) {\n      /**\n       * @suppress {checkTypes}\n       */\n      this[child.name] = child\n    }\n\n    if (placeAfter && parseInt(placeAfter, 10) !== 0) {\n      const afterMC = this.getChildById(parseInt(placeAfter, 10))\n\n      if (afterMC.isMasked) {  //if masked add outside mask group\n        afterMC.el.parent().before(child.el)\n      } else {\n        afterMC.el.before(child.el)\n      }\n    } else {\n      this.el.add(child.el)\n    }\n  }\n  //manage children methods\n  /**\n   * @param {number| string} id\n   */\n  getChildById(id) {\n    return this.children.find(({ id: i }) => {\n      return i == id\n    })\n  }\n  /**\n   * @param {number} id\n   */\n  getChildIndexById(id) {\n    return this.children.findIndex(({ id: i }) => {\n      return i == id\n    })\n  }\n  /**\n   * @param {number} id\n   */\n  removeChildById(id) {\n    for (let i = 0; i < this.children.length; i += 1) {\n      if (this.children[i].id == id) {\n        this.children.splice(i, 1)\n        return\n      }\n    }\n  }\n  /**\n   * @param {number} id\n   * @param {number} placeAfter\n   */\n  swapChildIndex(id, placeAfter) {\n    var i, child\n\n    for (i = 0; i < this.children.length; i += 1) {\n      if (this.children[i].id == id) {\n        child = this.children.splice(i, 1)\n        break\n      }\n    }\n\n    for (i = 0; i < this.children.length; i += 1) {\n      if (this.children[i].id == placeAfter) {\n        this.children.splice(i + 1, 0, child[0])\n        break\n      }\n    }\n  }\n  insertAtIndex(child, placeAfter) {\n    var i\n\n    this._addChild(child, placeAfter)\n\n    if (parseInt(placeAfter, 10) === 0) {\n      this.children.unshift(child)\n    }\n\n    for (i = 0; i < this.children.length; i += 1) {\n      if (this.children[i].id == placeAfter) {\n        this.children.splice(i + 1, 0, child)\n        break\n      }\n    }\n  }\n  containsMask() {\n    return this.children.some(({ isMask }) => isMask)\n  }\n  getFrameLabels() { return this._labels }\n  getMatrix() {\n    //TODO:: set to newM if exists\n    if (this.matrix) {\n      return this.matrix\n    } else {\n      return new window.Snap.Matrix()\n    }\n  }\n  getX() {\n    let _x = 0\n\n    if (this.matrix) {\n      _x = this.matrix.x()\n    }\n\n    return _x\n  }\n  getY() {\n    let _y = 0\n\n    if (this.matrix) {\n      _y = this.matrix.y()\n    }\n\n    return _y\n  }\n  mouseover(cb) {\n    this.el.mouseover(cb)\n  }\n  mouseout(cb) {\n    this.el.mouseout(cb)\n  }\n  mousedown(cb) {\n    this.el.mousedown(cb)\n  }\n  mousemove(cb) {\n    this.el.mousemove(cb)\n  }\n  click(cb) {\n    this.el.click(cb)\n  }\n  executeFrameScript(script) {\n    eval('(function () {' + script + '}).call(this);')\n  }\n  removeFrameScript(id) {\n    delete this._scripts[id]\n  }\n  addFrameScript(id, script) {\n    this._scripts[id] = script\n  }\n  getFrame(num) {\n    return this.m_timeline.Frame.find(({ num: n }) => n == num)\n  }\n  _checkLoop() {\n    if (this.m_currentFrameNo == this.m_frameCount) {\n      if (!this.loops) return\n      this._loop()\n    }\n  }\n  _loop() {\n    var frame,\n      commands,\n      i,\n      found,\n      type\n\n    this.m_currentFrameNo = 0\n\n    frame = this.getFrame(this.m_currentFrameNo)\n\n    if (!frame) {\n      this.clearChildren()\n      return\n    }\n\n    //Get the commands for the first frame\n    commands = frame.Command\n\n    // Iterate through all the elements in the display list\n    // check if same instance exists in the first frame\n    for (i = 0; i < this.children.length; i += 1) {\n      found = false\n      const child = this.children[i]\n\n      for (let c = 0; c < commands.length; ++c) {\n        const cmdData = commands[c]\n        type = cmdData.cmdType\n\n        if (type == 'Place') {\n          if (parseInt(child.id, 10) == parseInt(cmdData.objectId, 10)) {\n            found = true\n            break\n          }\n        }\n      }\n\n      if (found === false) {\n        const command = new CMD.RemoveObjectCommand(child.id)\n        this.commandList.push(command)\n      }\n    }\n  }\n  clearChildren() {\n    var i,\n      child,\n      command\n\n    for (i = 0; i < this.children.length; i += 1) {\n      child = this.children[i]\n      command = new CMD.RemoveObjectCommand(child.id)\n      this.commandList.push(command)\n    }\n  }\n  _animate() {\n    var i\n\n    if (this.playing !== false) {\n      this.step_1_animTimeline()\n      this.step_2_enterFrame()\n      //this.step_3_addPending();\n      this.step_4_frameConstructed()\n      this.step_5_frameScripts()\n      this.step_6_exitFrame()\n    }\n\n    for(i = 0; i < this.children.length; i += 1)\n    {\n      if (this.children[i]._animate) {\n        this.children[i]._animate()\n      }\n    }\n\n    GP.purge()\n  }\n  /**\n   * @param {Array<_snapsvgAnimator.Command>} commands\n   */\n  _runCommands(commands) {\n    let command\n    for (let c = 0; c < commands.length; c += 1) {\n      const cmdData = commands[c]\n      const type = cmdData.cmdType\n      command = null\n      let found\n\n      switch(type) {\n      case 'Place':\n\n        found = this.getChildById(cmdData.objectId)\n\n        if (!found) {\n          command = new CMD.PlaceObjectCommand(cmdData.charid, cmdData.objectId, cmdData.name, cmdData.placeAfter, cmdData.transformMatrix, cmdData.bounds)\n          this.commandList.push(command)\n        } else {\n          command = new CMD.MoveObjectCommand(cmdData.objectId, cmdData.transformMatrix)\n          this.commandList.push(command)\n          command = new CMD.UpdateObjectCommand(cmdData.objectId, cmdData.placeAfter)\n          this.commandList.push(command)\n        }\n\n        break\n      case 'Move':\n        command = new CMD.MoveObjectCommand(cmdData.objectId, cmdData.transformMatrix)\n        this.commandList.push(command)\n        break\n      case 'Remove':\n        command = new CMD.RemoveObjectCommand(cmdData.objectId)\n        this.commandList.push(command)\n        break\n      case 'UpdateZOrder':\n        command = new CMD.UpdateObjectCommand(cmdData.objectId , cmdData.placeAfter)\n        this.commandList.push(command)\n        break\n      case 'UpdateVisibility':\n        command = new CMD.UpdateVisibilityCommand(cmdData.objectId , cmdData.visibility)\n        this.commandList.push(command)\n        break\n      case 'UpdateColorTransform':\n        command = new CMD.UpdateColorTransformCommand(cmdData.objectId , cmdData.colorMatrix)\n        this.commandList.push(command)\n        break\n      case 'UpdateBlendMode':\n        //  command = new CMD.UpdateBlendMode(cmdData.objectId , cmdData.blendMode);\n        //  this.commandList.push(command);\n        break\n      case 'UpdateMask':\n        command = new CMD.UpdateMaskCommand(cmdData.objectId , cmdData.maskTill)\n        this.commandList.push(command)\n        break\n      case 'AddFrameScript':\n        command = new CMD.AddFrameScriptCommand(cmdData.scriptId, cmdData.script)\n        this.commandList.push(command)\n        break\n      case 'RemoveFrameScript':\n        command = new CMD.RemoveFrameScriptCommand(cmdData.scriptId)\n        this.commandList.push(command)\n        break\n      case 'SetFrameLabel':\n        command = new CMD.SetFrameLabelCommand(cmdData.Name)\n        this.commandList.push(command)\n        break\n      }\n    }\n\n    if (this.containsMask) {\n      command = new CMD.ApplyMaskCommand()\n      this.commandList.push(command)\n    }\n\n    this.executeCommands(this.commandList, this.resourceManager)\n  }\n  //update timeline animations\n  step_1_animTimeline() {\n    if (!this.playing) {\n      return\n    }\n\n    this.commandList = []\n\n    this._checkLoop()\n\n    const frame = this.getFrame(this.m_currentFrameNo)\n    this.m_currentFrameNo++\n\n    if (!frame) {\n      return\n    }\n\n    const commands = frame.Command\n    this._runCommands(commands)\n  }\n  step_2_enterFrame() {\n    //dispatch enter frame event\n    //trigger on children\n  }\n  step_3_addPending() {\n\n  }\n  step_4_frameConstructed() {\n    //dispatch frame constructed event\n    //trigger on children\n  }\n  step_5_frameScripts() {\n    //trigger framescripts\n    //trigger on children\n\n    for (var i in this._scripts) {\n      this.executeFrameScript.call(this, this._scripts[i])\n    }\n  }\n  step_6_exitFrame() {\n    //dispatch exit frame event\n    //trigger on children\n  }\n  play() {\n    this.playing = true\n  }\n  stop() {\n    this.playing = false\n  }\n  gotoAndStop(fr) {\n    this._gotoAndPlayStop(fr, true)\n  }\n  gotoAndPlay(fr) {\n    this._gotoAndPlayStop(fr, false)\n  }\n  _gotoAndPlayStop(frame, bStop) {\n    //TODO::handle labels\n    if (typeof frame === 'string') {\n      var labels = this.getFrameLabels()\n      var bFound = false\n\n      for (var i = labels.length - 1; i >= 0; i--) {\n        if (frame === labels[i].name) {\n          frame = parseInt(labels[i].frameNum, 10) + 1\n          bFound = true\n          break\n        }\n      }\n\n      if (bFound === false) {\n        return\n      }\n    }\n\n    //if frame number is invalid, don't do anything\n    if (frame < 1 || frame > this.m_frameCount) {\n      return\n    }\n\n    // If we are already at the destination frame, don't do anythin\n    if (frame == this.m_currentFrameNo) {\n      if (bStop === false) {\n        this.play()\n      } else {\n        this.stop()\n      }\n      return\n    }\n\n    // First ensure that the timeline is in a good state to start jumping around\n    //this.step_3_addPending(true);\n    this.play()\n\n    // Loop around if necessary\n    if (frame < this.m_currentFrameNo) {\n      var bSeekEnd = (frame == 1)\n      this._loopAround()\n      //this.step_3_addPending(!bSeekEnd);\n    }\n\n    while (this.m_currentFrameNo < frame) {\n      // var bSeekEnd1 = (frame == this.m_currentFrameNo)\n      this.step_1_animTimeline()\n\n      for(var j = 0; j < this.children.length; j += 1)\n      {\n        if (this.children[j].step_1_animTimeline) {\n          this.children[j].step_1_animTimeline()\n        }\n      }\n\n      //this.step_3_addPending(!bSeekEnd);\n    }\n\n    if (bStop === false) {\n      this.play()\n    } else {\n      this.stop()\n    }\n\n    this.step_4_frameConstructed()\n    this.step_5_frameScripts()\n    this.step_6_exitFrame()\n  }\n  _loopAround () {\n    this.commandList = []\n    this._loop()\n    this.m_currentFrameNo = 0\n\n    const frame = this.getFrame(this.m_currentFrameNo)\n\n    if (!frame) {\n      return\n    }\n\n    //Get the commands for the first frame\n    const commands = frame.Command\n    this._runCommands(commands)\n  }\n  executeCommands(commandList, resourceManager) {\n    var i\n    for (i = 0; i < commandList.length ; i++)\n    {\n      if (commandList[i] !== undefined) {\n        commandList[i].execute(this, resourceManager)\n      }\n    }\n  }\n  log() {\n    if (this.id.indexOf('svg') > -1) { // only on main timeline\n      var args = Array.prototype.slice.call(arguments)\n      args.unshift(this.id.toUpperCase())\n      //console.log.apply(console, args);\n    }\n  }\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Timeline} _snapsvgAnimator.Timeline\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Element} _snap.Element\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Paper} _snap.Paper\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Matrix} _snap.Matrix\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Command} _snapsvgAnimator.Command\n */","import MovieClip from './movieclip'\nimport ResourceManager from './resourceManager'\n\nexport default class SVGAnim {\n  /**\n   * SVGAnim\n   * initialize animation component\n   * @param {_snapsvgAnimator.Data} data The data type.\n   * @param {DOMDocument} data.DOMDocument The DOMDocument.\n   */\n  constructor(data, w = 100, h = 100, fps = 24, params = {}) {\n    this.fps = fps\n    this.cbk = null\n    this.data = data\n    // color = '#008460',\n\n    this.version = '1.2.3'\n    // console.log('%c' + msg, 'color:' + color + ';font-weight:bold;');\n\n    const { elementId, element, autoplay = true } = params\n\n    this.playing = autoplay\n    this.debug = false\n\n    if (this.debug) {\n      console.log('%c' + '/*DEBUG*/', 'color:#FF6666;font-weight:bold;')\n      this.playing = false\n      this.autoplay = false\n      window.addEventListener('keydown', this.handleKeyDown)\n    }\n\n    this.resourceManager = new ResourceManager(data)\n\n    //TODO:: RENDERER\n    /**\n     * @type {_snap.Paper}\n     */\n    const s = element ? new window.Snap(element) : elementId ? new window.Snap(elementId) : new window.Snap(w, h)\n    s.attr({ 'id': s.id })\n    s.attr({\n      'viewBox': '0 0 ' + w + ' ' + h,\n      'preserveAspectRatio': 'xMidYMid meet',\n    })\n    this.s = s\n    this.id = s.id\n    //TODO:: set bg color here\n\n    //Set width and height of element if element id given\n    if (elementId) {\n      s.attr({\n        'width': w,\n        'height': h,\n      })\n    }\n\n    this.mc = null\n    this.create(s)\n\n    if (this.debug) {\n      setInterval(() => traceDisplayList(this.mc), 100)\n    }\n\n    if (autoplay) {\n      this.play()\n    } else {\n      this.interval()\n    }\n    this.rootAnimator = undefined\n\n    //generate linked movieclips\n    this.linkage = {}\n  }\n  toString() {\n    return 'Snap.svg Animator v' + this.version\n  }\n\n  /**\n   * @param {_snap.Paper} s\n   */\n  create(s) {\n    var maintimelineIndex\n\n    if (this.rootAnimator) {\n      this.rootAnimator.dispose()\n    }\n\n    for (let i = this.data.DOMDocument.Timeline.length - 1; i > -1; i -= 1) {\n      if (this.data.DOMDocument.Timeline[i].linkageName) {\n        this.linkage[this.data.DOMDocument.Timeline[i].linkageName] = this.data.DOMDocument.Timeline[i]\n      } else {\n        maintimelineIndex = i\n        break\n      }\n    }\n\n    const mainTimeline = this.resourceManager.m_data.DOMDocument.Timeline[maintimelineIndex]\n    this.mc = new MovieClip(mainTimeline, s, this.resourceManager, this.id)\n\n    this.cbk = setTimeout(() => {\n      this.interval()\n    }, 1000 / this.fps)\n  }\n  play() {\n    this.mc.play()\n    this.playing = true\n  }\n  stop() {\n    if (this.mc.m_currentFrameNo == 0) { //force render if called immediately\n      this.mc._animate()\n    }\n\n    this.mc.stop()\n    this.playing = false\n  }\n  setLoop(l) {\n    this.mc.loops = l\n  }\n  interval() {\n    if (this.playing) {\n      this.mc._animate()\n    }\n    clearTimeout(this.cbk)\n    this.cbk = setTimeout(() => {\n      this.interval()\n    }, 1000 / this.fps)\n  }\n  handleKeyDown(e) {\n    switch (e.keyCode) {\n    case 65: //A inc frame by 1\n      this.interval()\n      break\n    case 32: //SPACE toggles playing\n      if (this.mc.playing) {\n        this.stop()\n      } else {\n        this.play()\n      }\n      break\n    }\n  }\n}\n\n/**\n * Debug output for displaylist\n * @param {MovieClip} mc\n */\nfunction traceDisplayList(mc) {\n  var debug = document.getElementById('debug'),\n    str = ''\n\n  if (!debug) {\n    debug = document.createElement('div')\n    debug.id = 'debug'\n    debug.style.position = 'absolute'\n    debug.style.top = '0'\n    debug.style.right = '0'\n    debug.style.backgroundColor = 'black'\n    debug.style.color = 'white'\n    debug.style.padding = '1em'\n\n    document.body.appendChild(debug)\n  }\n\n  function traceChildren(j, el) {\n    var k, i\n\n    for (i = 0; i < el.children.length; i += 1) {\n      for (k = 0; k < j; k += 1) {\n        str += '-'\n      }\n      str += el.children[i].id + ':' + el.children[i].children.length\n\n      if (el.children[i].isMask) {\n        str += ' (MASK till:' + el.children[i].maskTill + ')'\n      }\n\n      if (el.children[i].isMasked) {\n        str += ' (masked by: ' + el.children[i].mask + ')'\n      }\n\n      str += '<br/>'\n      traceChildren(j + 5, el.children[i])\n    }\n  }\n\n  str += mc.id + '<br/>'\n  str += mc.m_currentFrameNo + '<br/>'\n  traceChildren(2, mc)\n\n  debug.innerHTML = str\n}\n\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Data} _snapsvgAnimator.Data\n */\n/**\n * @suppress {nonStandardJsDocs}\n * @typedef {import('../types').Paper} _snap.Paper\n */","{\"DOMDocument\":{\"Shape\":[{\"charid\":\"1\",\"path\":[{\"color\":\"#20201e\",\"colorOpacity\":\"0\",\"d\":\"M 373.7 113.1l-12.85 -107.3l-365.5 -44.95l0 128.5l378.35 23.75\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"2\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 463.6 641.75l341.7 39.2\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"3\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 52.05 14.5q-0.05 -1.35 -3.95 -5q-8.05 -7.7 -19 -9.2q-6.4 -0.85 -11.95 0.8q-7.65 2.35 -11.85 8.05q-4 5.5 -4 12.35q0 6.7 3.95 13.3q4.65 7.8 13.75 12.4q5.6 2.7 11.05 3.35q3.8 0.4 7.85 -0.1q6.65 -1 11.5 -4.75q2.1 -1.7 4 -3.95q1.8 -2.25 1.75 -3.3q-0.05 -1 -1.25 -1.2q-0.9 -0.1 -1.55 1.1q-1.25 2 -3.2 4.05q-2.1 2 -4 3.2q-3 1.7 -6.9 2.5q-4 0.75 -7.8 0.35l-3.4 -0.65l-0.8 -45.55l2.65 0.1q6 0.85 11.35 3.9q5.4 3.05 8.75 7.5q1.05 1.5 1.85 1.6l0.8 -0.2l0.4 -0.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 110.4 35.55q-0.45 -6.5 -4.05 -12.45q-4.6 -7.35 -12.55 -11.7q-5.45 -3 -11.15 -3.75q-6 -0.75 -11.15 0.8q-7.8 2.2 -11.75 8.6q-3.15 5.2 -2.95 11.4q0.2 5 2.55 10.05q3.85 8.3 12.45 13.6q6.4 4.05 13.4 4.85q6.6 0.8 12.35 -1.5q7.75 -3 11.1 -9.95q2.1 -4.65 1.75 -9.95M 93.25 13.25q6.9 3.8 11.05 10.45q3.35 5.35 3.75 11.25q0.3 4.4 -1.25 8.5q-2.2 5.6 -7.8 8.8q-6.2 3.5 -14.45 2.55l-2.45 -0.5l-2.25 -44.8l2.6 0.15q5.65 0.75 10.8 3.6\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 159.85 20.9q-0.1 -1.2 -0.4 -1.55q-0.35 -0.5 -1.1 -0.6q-1.25 -0.2 -1.1 1.55l2.15 20.6q-30.7 -19.3 -45.6 -29.4l3.4 46.6q0.1 1.75 1.6 1.95q1.4 0.15 1.3 -1.3l-1.95 -21.65l23.9 14.9q14.6 9.3 22.3 14.6l-4.5 -45.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 237.65 67.35l4 6.35l22.3 2.6l-32.45 -49.55l-20.7 41.45l-0.5 1.55q0.15 0.95 1.3 1.1q0.55 0.05 0.9 -0.3l2.75 -5.9l22.4 2.7M 236.05 64.9l-19.6 -2.4l7.95 -16.2l11.65 18.6\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 209.85 27.6q-0.15 -0.9 -0.85 -1.25l-43.3 -6.05l-1.65 -0.1q-0.95 0 -0.85 1.05q0.1 1.15 1.8 1.35l11.75 1.35l4.7 42.8l20.8 2.4l-5 -42.45l11.05 1.8q1.65 0.2 1.55 -0.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 296.95 46.85q-0.25 -1.25 -3.8 -4.5q-7.4 -6.95 -16.2 -8.1q-5.15 -0.75 -9.25 0.9q-5.7 2.15 -8.15 7.5q-2.35 5.05 -1.35 11.35q0.95 6.05 4.95 12q4.75 7.1 12.5 11.1q4.75 2.4 9.15 2.95q3 0.35 6.1 -0.2q5.05 -0.95 8.3 -4.45q1.45 -1.6 2.6 -3.7q1.1 -2.05 0.95 -3q-0.2 -1 -1.2 -1.1q-0.7 -0.05 -1 1.05q-0.75 1.8 -2 3.7q-1.35 1.85 -2.7 2.95q-2.05 1.6 -5.05 2.4q-3 0.75 -6.05 0.35l-2.7 -0.5l-7.05 -41.5l2.1 0.05q4.8 0.6 9.45 3.35q4.65 2.75 7.9 6.75q1.05 1.3 1.65 1.4l0.65 -0.15l0.2 -0.6\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 328.05 44.4l9.8 1.6q1.45 0.2 1.25 -0.9q-0.15 -0.8 -0.8 -1.1l-2.25 -0.5l-36.1 -4.9l-1.45 -0.1q-0.85 0 -0.65 1.05q0.15 1.05 1.65 1.25l10.35 1.1l7.7 40.65l18.4 2.15l-7.9 -40.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"5\",\"path\":[{\"color\":\"#20201e\",\"colorOpacity\":\"0\",\"d\":\"M 306.5 145.5l-6.5 -101l-304.5 -57l0 107l311 51\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"6\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 460.2 436.95l292.65 56.35\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"7\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 460.2 382.65l283.35 63.6\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"8\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 41.85 76.75l-0.5 1q0 0.6 0.95 0.8q0.4 0.05 0.75 -0.1l2.8 -3.6l18.3 3.8l2.75 4.45l18.45 3.65l-22.55 -35.15l-20.95 25.15M 47 73.6l8.05 -9.9l8 13.15l-16.05 -3.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 18.2 43.85l-12.55 -2.65l0.05 29.65l17.15 3.45l-0.15 -5.4l5.2 1.4q4.95 1 8.6 0q3.6 -0.9 5.55 -3.65q1.65 -2.3 1.55 -5.2q-0.1 -2.65 -1.65 -5.4q-2.05 -3.6 -5.65 -6.05q-2.65 -1.85 -6.55 -3.2q-3.95 -1.35 -11.55 -2.95M 22.4 46.2l0.8 0.15q5.7 1.15 9.3 2.9q3.6 1.75 5.95 4.45q3.25 3.6 3.35 7.4q0.1 3.9 -3.05 6.3q-1.85 1.35 -4.65 1.75q-2.7 0.45 -5.8 -0.2q-3.45 -0.7 -5.65 -1.55l-0.25 -21.2\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 25 22.7q4.35 -0.75 6.3 -3.65q1.3 -1.95 1.3 -4.3q-0.1 -2.95 -1.9 -5.8q-2.35 -3.55 -6.6 -6q-2.95 -1.75 -6.05 -2.45q-3.3 -0.75 -6.1 -0.35q-4.3 0.5 -6.55 3.05q-1.85 2.15 -1.85 4.95q0 2.15 1.2 4.6q1.95 3.8 6.4 6.7q3.35 2.15 7.15 3.05q3.5 0.7 6.7 0.2M 30.4 18q-1.35 2.35 -4.5 3.4q-3.5 1.05 -7.95 0.1l-1.3 -0.35l-0.2 -20l1.4 0.25q3.1 0.7 5.9 2.35q3.65 2.1 5.8 5.4q1.65 2.6 1.75 5.2q0 1.95 -0.9 3.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 62.6 19.85q-0.1 -1.85 -1.2 -3.75q-1.5 -2.5 -4.1 -4.35q-1.85 -1.35 -4.7 -2.3q-2.8 -1.05 -8.2 -2.25l-8.9 -2.05l0.5 20.65l12.05 2.65l-0.2 -3.75l3.75 1.05q3.45 0.75 6.1 0.2q2.5 -0.65 3.9 -2.5q1.1 -1.55 1 -3.6M 54.65 11.2q2.55 1.3 4.2 3.2q2.4 2.6 2.5 5.2q0.1 2.7 -2.1 4.35q-1.35 0.9 -3.25 1.2q-1.95 0.2 -4.15 -0.3q-2.5 -0.55 -4 -1.2l-0.45 -14.75l0.55 0.1q4.1 0.95 6.7 2.2\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 107.9 64.7q3.65 2.2 6 5.1q0.75 0.95 1.3 1.1l0.55 -0.05l0.2 -0.4q-0.05 -0.85 -2.8 -3.35q-5.6 -5.1 -12.85 -6.65q-4.35 -0.95 -7.9 -0.25q-5 0.9 -7.6 4.3q-2.5 3.05 -2.25 7.15q0.25 4.1 3.05 8.35q3.35 5 9.35 8.3q3.75 2 7.45 2.75q2.45 0.45 5.1 0.4q4.4 -0.15 7.5 -2.1q1.4 -0.95 2.55 -2.2q1.1 -1.3 1.05 -1.9q-0.05 -0.6 -0.9 -0.8q-0.5 -0.1 -0.95 0.6q-0.7 1.1 -2.05 2.25q-1.25 1.05 -2.5 1.65q-1.95 0.9 -4.5 1.15q-2.6 0.15 -5.15 -0.35l-2.25 -0.6l-1.9 -27.75l1.85 0.3q3.95 0.8 7.65 3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 87.7 23.6q1.2 0.25 1.15 -0.35q0 -0.3 -0.2 -0.45l-1.1 -0.35l-10.1 -2.2l-0.2 -4.55l9.6 2.25q0.8 0.2 0.8 -0.25q-0.05 -0.45 -0.5 -0.65q-0.2 -0.1 -1.45 -0.35l-20.1 -4.65l1.05 20.5l23.3 5.1q0.5 0.1 0.5 -0.3q-0.05 -0.65 -1.15 -0.85l-10.95 -2.3l-0.85 -13.05l10.2 2.45\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 114.7 23.1q-0.7 -0.2 -0.65 0.55l0.8 9.35q-16.05 -10.5 -23.85 -15.9l1.4 20.65q0.05 0.8 0.8 1q0.7 0.15 0.7 -0.5l-0.85 -9.6l12.4 8.1q7.65 5 11.65 7.8l-1.6 -20.45q-0.05 -0.5 -0.25 -0.7q-0.15 -0.25 -0.55 -0.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 138.6 29.2q1.35 0.3 3 1.15q1.65 0.85 2.7 1.85q0.65 0.55 0.95 0.6l0.35 0l0.15 -0.3q-0.05 -0.4 -0.75 -0.95q-0.7 -0.7 -1.65 -1.2q-2.6 -1.6 -5.55 -2.3q-4.2 -0.95 -6.95 0.1q-2.8 1 -2.55 3.7q0.15 1.75 1.9 4.1q1.3 1.75 5.1 5.65q3.05 3.15 3.85 4.1q0.85 1.05 0.9 1.7q0.1 1.05 -2 0.6q-1.95 -0.4 -4 -1.55q-2.05 -1.25 -3.55 -2.75q-0.45 -0.5 -0.75 -0.55l-0.45 0.05l-0.15 0.3q0.05 0.6 2.3 2.4q3.2 2.3 7.25 3.2q4.3 0.9 7.15 0.1q1.5 -0.35 2.25 -1.35q0.75 -1.05 0.6 -2.35q-0.15 -1.6 -1.55 -3.55q-1.35 -1.9 -7.05 -7.65q-1.8 -1.85 -2.6 -2.85q-0.8 -1 -0.85 -1.6q-0.05 -0.55 0.5 -0.65q0.5 -0.25 1.45 0\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 177.35 101.45l2.8 4.25l16.7 3.35l-22.8 -33.75l-16.75 24.65l-0.1 0.4l-15.5 -24.5l10.25 -2.7q0.25 -0.25 0.25 -0.6q-0.1 -0.7 -1.4 -0.95q-0.6 -0.15 -1.4 0.05l-13.45 4.35l-0.5 -7.3l-15.25 -3.2l2.35 28.7l15.55 3.1l-2 -19.8l4.35 -1.35l14.95 24.75q0.25 0.25 0.85 0.4q0.6 0.15 1 0.05q0.2 0.2 0.65 0.3q0.35 0.05 0.65 -0.15l2.2 -3.45l16.6 3.4M 168.1 87.15l8.1 12.6l-14.5 -2.95l6.4 -9.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 195.55 86.3q-3 3.25 -2.35 8.15q0.35 2.65 1.85 5.6q1.9 3.55 5.3 6.65q2.55 2.3 5.7 4q3.2 1.65 6.35 2.3q3.55 0.7 6.7 0.1q3.1 -0.65 5.15 -2.45q3.65 -3.25 2.85 -9.3l-14.75 -3.05q-1.1 -0.25 -1 0.4q0.05 0.45 0.35 0.65l14.1 3.05q0.1 2.15 -0.75 4.15q-1.9 4.65 -7.85 5.4q-2.35 0.3 -5 -0.25l-1.85 -0.5l-3.7 -26.85l1.75 0.3q7.2 1.45 12.65 7.85q0.7 0.8 1.25 0.95l0.55 -0.1l0.15 -0.4q-0.1 -0.75 -2.55 -3.05q-5.5 -5.1 -12.25 -6.55q-3.95 -0.8 -7.3 -0.05q-3.4 0.8 -5.35 3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 200.5 43.5q-0.1 -0.7 -0.7 -0.8q-0.8 -0.25 -0.65 0.5l0.8 5q0.8 5.85 0.85 8.05q-0.05 2.15 -0.95 3.2q-1.7 1.95 -7.8 0.55l-1.55 -0.4l-2.5 -19.4l-10.5 -2.4l1.9 14.05q0.2 1.1 0.75 2.2q1.1 2.4 3.35 3.8q2.9 1.75 8.2 2.95q5.95 1.3 8.2 0.05q1.7 -1 1.9 -3.25l0.05 -2.35l-1.25 -10.65q-0.05 -0.65 -0.1 -1.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 175.9 47.1q-0.35 -2.85 -2.15 -5.55q-2.4 -3.45 -6.3 -5.7q-2.7 -1.55 -5.45 -2.2q-2.95 -0.7 -5.3 -0.25q-3.65 0.6 -5.3 3.1q-1.4 2 -1.1 4.7q0.2 2.15 1.45 4.4q2.05 3.65 6.2 6.4q3.1 2.05 6.45 2.75q3.1 0.7 5.8 0.1q3.65 -0.8 5.05 -3.6q0.95 -1.85 0.65 -4.15M 172.8 41.75q1.65 2.45 2 5q0.2 1.9 -0.4 3.5q-0.95 2.3 -3.6 3.35q-2.85 1.05 -6.8 0.25l-1.15 -0.35l-2.15 -19.2l1.25 0.2q2.7 0.6 5.3 2.15q3.35 1.95 5.55 5.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 221.5 48.9q-1.7 -1 -4.1 -1.75q-2.3 -0.7 -6.8 -1.75l-6.8 -1.55l2.75 19.65l10.4 2.3l-0.7 -4.45q3.8 3.1 6.6 4.8q3.4 2.05 5.2 2.45q0.75 0.15 0.7 -0.3q-0.05 -0.35 -0.6 -0.6q-2.25 -0.9 -4.15 -1.85q-2.05 -1.15 -3.8 -2.45q5.1 0.85 7.1 -1.9q1.25 -1.75 0.9 -4.05q-0.4 -2.3 -2.1 -4.55q-1.9 -2.55 -4.6 -4M 214.3 47.2q3.9 0.9 6.25 2.05q2.25 1.1 3.9 3.05q2.25 2.35 2.65 4.8q0.2 1.5 -0.3 2.75q-0.55 1.4 -1.9 2.1q-2.1 1.1 -5.55 0.35l-0.85 -0.15l-2.45 -2.1l-1.75 -12.85\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 270.05 98.2q0.6 -0.35 1.7 -0.1q1.75 0.35 3.8 1.45q2 1 3.4 2.25q0.8 0.8 1.2 0.85l0.45 0l0.15 -0.35q-0.1 -0.5 -1 -1.35q-1 -0.85 -2.2 -1.6q-3.25 -1.95 -6.85 -2.7q-5.2 -1.1 -8.3 0.45q-3.25 1.45 -2.6 5.2q0.45 2.45 2.85 5.55q1.8 2.35 6.9 7.5q4.05 4.05 5.15 5.4q1.1 1.3 1.3 2.3q0.25 1.4 -2.35 0.9q-2.35 -0.45 -4.9 -1.95q-2.65 -1.55 -4.6 -3.5q-0.7 -0.75 -1.1 -0.85l-0.45 0.2l-0.15 0.4q0.15 0.9 3 3.05q4.2 3.1 9.1 4.1q5.3 1 8.6 -0.25q1.7 -0.7 2.5 -2.05q0.75 -1.45 0.4 -3.3q-0.45 -2.2 -2.35 -4.8q-1.9 -2.45 -9.5 -10.05q-2.4 -2.4 -3.4 -3.7q-1.1 -1.4 -1.2 -2.2q-0.15 -0.65 0.45 -0.85\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 254.1 95.25q0.95 0.25 0.85 -0.45q-0.1 -0.6 -0.6 -0.8q-0.25 -0.1 -1.85 -0.45l-23.85 -5.05l4.4 27.75l27.8 5.55q0.65 0.05 0.55 -0.55q-0.15 -0.75 -1.45 -1l-13.05 -2.45l-3.05 -17.65l12.1 2.65q1.5 0.3 1.35 -0.45q-0.1 -0.5 -0.4 -0.65l-1.25 -0.35l-12 -2.45l-0.95 -6.2l11.4 2.55\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 250.95 58.55q-0.1 -0.6 -1.95 -2.25q-3.9 -3.5 -8.6 -4.6q-2.75 -0.7 -4.95 -0.15q-3.05 0.55 -4.4 2.85q-1.35 2 -0.9 4.85q0.45 2.75 2.5 5.6q2.4 3.4 6.45 5.6q2.45 1.4 4.8 1.9q1.55 0.35 3.25 0.35q2.65 -0.15 4.5 -1.4q0.8 -0.6 1.45 -1.45q0.6 -0.9 0.55 -1.3q-0.1 -0.4 -0.65 -0.5q-0.35 -0.1 -0.55 0.35q-0.35 0.8 -1.1 1.55q-0.75 0.7 -1.45 1.1q-1.15 0.55 -2.75 0.7q-1.6 0.15 -3.25 -0.25l-1.45 -0.4l-3.1 -18.7l1.1 0.1q2.55 0.6 5 2.1q2.45 1.5 4.2 3.55q0.5 0.65 0.85 0.7l0.3 -0.05l0.15 -0.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 271.5 59.45q-0.2 -0.1 -1.25 -0.35l-17.05 -3.9l3.5 19.45l19.75 4.3q0.4 0 0.35 -0.35q-0.15 -0.55 -1.05 -0.75l-9.3 -2l-2.35 -12.3l8.65 2.1q1.05 0.2 0.95 -0.35q-0.05 -0.3 -0.25 -0.45l-0.95 -0.3l-8.55 -1.85l-0.75 -4.35l8.15 1.95q0.7 0.15 0.6 -0.3q-0.05 -0.4 -0.45 -0.55\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"10\",\"path\":[{\"color\":\"#20201e\",\"colorOpacity\":\"0\",\"d\":\"M 275.85 162.75q-0.5 -0.35 -7.5 -54.65q-7.05 -54.3 -7.55 -54.7q-0.5 -0.35 -134.9 -36.1q-134.4 -35.7 -134.9 -36.1q-3 120.4 -4 121.35q2.05 0.15 144.45 30.1q144.9 30.5 144.4 30.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"11\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 459.65 284.9l265.3 67.7\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"12\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 463.3 234.2l250.25 70.85\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"13\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 36.05 63.05q-0.05 -2.2 -2.3 -4.1q-3.3 -2.85 -9.3 -4.45q-7.45 -2.15 -11.7 -0.65q-3.45 1.15 -3.45 4.5q0 1.45 0.8 3.2q0.75 1.75 2.9 5.1q-4.45 0.5 -6.45 1.95q-2.1 1.35 -2.1 3.9q0 2.8 2.45 5.35q1.4 1.55 3.95 2.95q2.45 1.3 5.15 2.05q5.4 1.35 9.8 0l3.05 2.85l21.5 5.65q-6.75 -6.7 -11.75 -12.95q3.3 -1.35 5.15 -1.75q1.9 -0.45 3.4 -0.15l1.9 0.25q0.35 -0.05 0.3 -0.55q0 -0.95 -1.55 -1.35q-3.65 -1 -10.5 2.05q-5.75 -7.35 -7.5 -9.9q6.35 -0.6 6.25 -3.95M 31.5 58.85q2.45 1.7 2.55 3.65q0.05 2.7 -5.45 3q-4.6 -6.45 -5.8 -10.05l1.5 0.4q4.6 1.25 7.2 3M 8.3 69.8q1.55 -1.15 5.65 -1.7l5.55 7.55l4.85 5.7q-3.85 1.2 -8.4 0q-2.05 -0.5 -4 -1.55q-2 -1.05 -3.15 -2.25q-2.15 -2.1 -2.15 -4.6q-0.05 -2.1 1.65 -3.15\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 44 12.3q-0.25 -0.35 -0.9 -0.55q-1.1 -0.35 -1.05 0.75l0.55 12.45q-24.8 -16.45 -36.8 -24.95l0.15 27.75q0 1.1 1.25 1.45q1.15 0.3 1.15 -0.55l-0.35 -12.9l19.2 12.7q11.75 7.9 17.9 12.25l-0.85 -27.4q-0.05 -0.75 -0.25 -1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 127.4 83.45l-17.05 -4.7l2.3 28.95l34.5 9.05q0.9 0.15 0.8 -0.55q-0.1 -0.8 -1.7 -1.2l-16.25 -4.15l-2.6 -27.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 85.75 72.55l2 0.4q4.5 1.25 8.6 3.8q4.15 2.55 6.8 5.7q0.8 1 1.4 1.2l0.65 0l0.25 -0.35q-0.1 -0.9 -3.1 -3.6q-6.25 -5.7 -14.5 -8q-4.85 -1.3 -8.95 -0.95q-5.65 0.45 -8.6 3.5q-2.85 2.85 -2.6 7.1q0.15 4.05 3.3 8.55q3.7 5.35 10.55 9.25q4.25 2.4 8.35 3.45q2.8 0.7 5.85 0.95q4.9 0.2 8.45 -1.5q1.55 -0.75 2.95 -1.9q1.25 -1.15 1.2 -1.8q-0.05 -0.65 -0.95 -0.85q-0.7 -0.2 -1.15 0.45q-0.9 1.05 -2.3 2.1q-1.5 0.95 -2.9 1.4q-2.2 0.65 -5.1 0.7q-2.95 -0.05 -5.85 -0.8l-2.5 -0.8l-1.85 -28\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 88.95 44.7q1.65 -2.35 1.45 -5.45q-0.25 -3.8 -3 -7.8q-3.45 -4.9 -9.55 -8.6q-4.2 -2.5 -8.6 -3.8q-4.6 -1.35 -8.6 -1.25q-6 0.2 -9.05 3.25q-2.45 2.5 -2.3 6.15q0.1 2.9 1.85 6.1q2.9 5.3 9.45 9.65q4.85 3.25 10.2 4.75q5.05 1.45 9.5 1.05q6 -0.55 8.65 -4.05M 87.55 43.2q-1.75 2.95 -6.1 3.9q-4.8 1.05 -11.1 -0.7l-1.9 -0.65l-1.35 -26.05l2 0.45q4.35 1.25 8.3 3.7q5.3 3.25 8.45 7.7q2.5 3.6 2.75 7q0.2 2.6 -1.05 4.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 108.3 31.35l-14.35 -4.25l2.05 26.9l20.25 5.75l3.1 0.5q6.65 0.85 10.5 -2.15q3.05 -2.55 2.6 -6.8q-0.4 -4.15 -4.1 -8.55q-4.65 -5.55 -11.6 -8.55q-2.9 -1.25 -8.45 -2.85M 110.7 33.25l1.15 0.3q9.8 2.9 15.4 9.8q3.1 3.75 3.45 7.45q0.35 3.3 -1.8 5.55q-2.4 2.55 -7.15 2.75q-2.05 0 -3.6 -0.25q-1.6 -0.25 -5.3 -1.25l-2.15 -24.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 219.95 108.5q-1.1 -0.35 -0.9 0.8l1.3 7.05q1.35 8.4 1.4 11.5q0 3.1 -1.3 4.4q-2.55 2.6 -11.75 0.2l-2.35 -0.7l-4.2 -27.8l-15.95 -4.4l3.05 20.2q0.3 1.5 1.1 3.15q1.8 3.5 5.3 5.75q4.35 2.8 12.45 4.95q9.15 2.35 12.5 0.75q2.55 -1.3 2.8 -4.5l-0.05 -3.4l-2.1 -15.1q-0.1 -0.95 -0.2 -1.55q-0.2 -1.05 -1.1 -1.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 239.25 114.15l-13.25 -3.65l4.85 28.2l18.7 4.9l2.8 0.4q6.05 0.5 9.15 -2.9q2.45 -2.85 1.6 -7.3q-0.85 -4.35 -4.65 -8.75q-4.75 -5.6 -11.3 -8.3q-2.7 -1.2 -7.9 -2.6M 241.65 116.1l1.05 0.25q9.1 2.45 14.85 9.4q3.15 3.8 3.9 7.6q0.65 3.45 -1 5.95q-1.85 2.85 -6.1 3.25q-1.8 0.15 -3.2 0.05q-1.5 -0.3 -4.9 -1.1l-4.6 -25.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 192.7 78.25q1.2 1.55 2.9 2.9q3.8 2.95 10.25 4.8q4.35 1.2 7.35 1.3q2.95 0.05 4.75 -1q3.1 -1.8 2.3 -6.6l-2.85 -16.15l-15.1 -4.45l4.05 25.8l-1.55 -0.35q-3.35 -1 -6.45 -2.9q-3.85 -2.45 -4.65 -5.05q-0.4 -1.3 -1.45 -1.6q-1.05 -0.3 -0.9 0.55q0.15 1.1 1.35 2.75\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 170.75 95.85q-4.1 -2.45 -8.35 -3.65q-4.4 -1.15 -8.1 -0.8q-5.65 0.45 -8.25 3.85q-2.1 2.8 -1.7 6.65q0.35 3.05 2.25 6.4q3.15 5.45 9.6 9.7q4.8 3.25 9.95 4.55q4.8 1.3 8.95 0.65q5.55 -0.85 7.75 -4.7q1.4 -2.6 0.95 -5.9q-0.55 -3.95 -3.4 -8.05q-3.65 -5.05 -9.65 -8.7M 162.35 93.45q4.15 1.1 8.1 3.5q5.2 3.15 8.5 7.75q2.65 3.65 3.15 7.3q0.35 2.7 -0.65 5q-1.4 3.15 -5.4 4.4q-4.4 1.35 -10.45 -0.2l-1.85 -0.6l-3.3 -27.55l1.9 0.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 180.55 70.15q-3.45 -0.95 -5.4 -0.3q-1.95 0.55 -1.65 2.6q0.15 1.35 1.6 2.85q2.4 2.45 6.65 3.6q3.4 0.95 5.35 0.3q2 -0.6 1.7 -2.6q-0.3 -1.95 -2.55 -3.65q-2.3 -1.85 -5.7 -2.8\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 165.25 48.2q-0.3 -0.2 -2.15 -0.7l-27.7 -8.2l2.9 26.75l32.45 9.1q0.75 0.15 0.7 -0.4q-0.1 -0.75 -1.6 -1.15l-15.35 -4.25l-2.1 -16.9l14.1 4.25q1.65 0.45 1.6 -0.25q-0.05 -0.45 -0.4 -0.65l-1.5 -0.55l-13.95 -4l-0.65 -5.95l13.3 4.05q1.1 0.3 1 -0.35q-0.05 -0.55 -0.65 -0.8\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 245.7 73.4q-1.05 -0.9 -2.4 -1.75q-3.55 -2.3 -7.5 -3.45q-5.75 -1.7 -9.25 -0.65q-3.65 1 -3.05 4.5q0.4 2.3 2.95 5.5q1.9 2.4 7.5 7.9q4.35 4.25 5.55 5.65q1.2 1.35 1.4 2.3q0.2 1.3 -2.65 0.55q-2.65 -0.8 -5.45 -2.5q-2.9 -1.7 -5 -3.85q-0.75 -0.75 -1.2 -0.85l-0.5 0.1l-0.25 0.3q0.15 0.85 3.35 3.3q4.55 3.35 10 4.95q5.9 1.65 9.6 0.9q1.95 -0.4 2.8 -1.6q0.9 -1.25 0.55 -3.05q-0.4 -2 -2.45 -4.7q-2.05 -2.55 -10.25 -10.55q-2.55 -2.5 -3.75 -3.85q-1.15 -1.45 -1.3 -2.2q-0.1 -0.7 0.6 -0.8q0.7 -0.2 1.95 0.15q1.9 0.55 4.15 1.85q2.25 1.25 3.7 2.6q0.95 0.75 1.35 0.9l0.5 0l0.15 -0.35q-0.1 -0.4 -1.1 -1.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"15\",\"path\":[{\"color\":\"#669933\",\"colorOpacity\":\"0\",\"d\":\"M 232.95 104.35l0 -49l-239 -74l0 55l239 68\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"16\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 460.2 124.1l219.75 70.8\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"17\",\"path\":[{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 20.7 16.95l2.15 3.2l15 4.9l-17.6 -25.05l-17.75 12.65l-0.4 0.5q0 0.4 0.75 0.65q0.3 0.05 0.6 0l2.4 -1.8l14.85 4.95M 19.85 15.7l-13.05 -4.3l6.8 -4.95l6.25 9.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 66.4 20.3q-2 -2.65 -5.3 -4.55q-2.05 -1.25 -4.9 -2.4q-2.9 -1.15 -8.55 -3.1l-8.45 -2.75l0.55 18.15l13 4.3l-0.25 -4.2q4.45 3.6 7.8 5.75q4 2.55 6.25 3.3q0.95 0.25 0.95 -0.15q-0.05 -0.35 -0.7 -0.65q-2.7 -1.25 -5.05 -2.65q-2.35 -1.35 -4.4 -2.9q6.3 1.85 9.3 -0.2q1.9 -1.3 1.8 -3.45q-0.15 -2.1 -2.05 -4.5M 64.45 19.4q2.45 2.6 2.6 4.95q0.1 1.35 -0.8 2.4q-0.95 1.05 -2.75 1.4q-2.9 0.55 -7.2 -0.85l-1 -0.35l-2.85 -2.35l-0.35 -11.95q4.95 1.75 7.7 3.25q2.75 1.5 4.65 3.5\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 87.75 24.6l6.8 2.4q1.05 0.35 1 -0.1q-0.05 -0.35 -0.45 -0.6l-27.55 -9.3q-0.55 -0.1 -0.55 0.3q0.05 0.45 1 0.75l7.2 2.35l1.1 17.25l12.6 4.15l-1.15 -17.2\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 130.55 40.1q-2.6 -2.2 -5.8 -3.65q-2.1 -1 -6.1 -2.3l-10.5 -3.5l1.75 18.05l16.85 5.35q4.85 0.9 7.6 -1q2.25 -1.5 1.9 -4.35q-0.35 -2.8 -3 -5.9q-1.25 -1.45 -2.7 -2.7M 132.45 43.05q2.25 2.7 2.55 5.15q0.25 2.3 -1.3 3.65q-1.75 1.6 -5.2 1.45q-1.5 -0.05 -2.6 -0.3q-1.15 -0.25 -3.85 -1.15l-1.65 -16.3l0.8 0.25q4.8 1.6 8.2 4.3q1.7 1.35 3.05 2.95\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 162.35 53.9q-0.05 -0.35 -0.3 -0.45l-1.05 -0.5l-10.25 -3.35l-0.5 -4.05l9.75 3.4q0.85 0.25 0.8 -0.2q-0.1 -0.4 -0.5 -0.55q-0.25 -0.15 -1.6 -0.55l-20.35 -6.85l2.15 17.95l23.75 7.75q0.55 0.15 0.5 -0.2q-0.05 -0.5 -1.2 -0.85l-11.15 -3.55l-1.55 -11.45l10.3 3.45q1.25 0.45 1.2 0\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 192.75 63.1q-1.35 1.55 -0.95 4q0.25 1.85 1.65 4.05q2.25 3.5 6.65 6.55q3.3 2.25 6.8 3.4q3.2 1.05 6 0.95q3.7 -0.2 5.1 -2.45q0.9 -1.5 0.55 -3.5q-0.5 -2.55 -2.5 -5.2q-2.55 -3.35 -6.7 -5.95q-2.85 -1.75 -5.7 -2.7q-3 -1.05 -5.5 -1.05q-3.75 -0.05 -5.4 1.9M 203.65 63q2.8 0.9 5.5 2.6q3.6 2.25 5.9 5.25q1.9 2.5 2.3 4.75q0.3 1.7 -0.35 2.95q-0.85 1.95 -3.5 2.45q-2.95 0.55 -7.05 -0.8l-1.2 -0.5l-2.9 -17.1l1.3 0.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#ffffff\",\"colorOpacity\":\"1\",\"d\":\"M 185.6 58.9q0.95 0.8 1.7 1.7q0.6 0.75 1 0.85l0.4 0l0.15 -0.2q-0.1 -0.55 -2.15 -2.35q-4.35 -3.85 -9.7 -5.65q-3.15 -1.05 -5.7 -1.05q-3.6 0 -5.35 1.75q-1.65 1.6 -1.3 4.15q0.05 0.4 0.15 0.8q0.55 2.15 2.45 4.65q2.6 3.4 7.15 6.15q2.75 1.6 5.45 2.5q1.8 0.55 3.75 0.9q3.15 0.4 5.35 -0.4q0.95 -0.4 1.75 -1.05q0.75 -0.65 0.7 -1.05q-0.1 -0.4 -0.7 -0.6q-0.4 -0.1 -0.7 0.25q-0.45 0.65 -1.35 1.2q-0.9 0.5 -1.75 0.7q-1.4 0.25 -3.25 0.1q-1.9 -0.2 -3.7 -0.8l-1.7 -0.6l-2.55 -17.2l1.35 0.35q2.9 1 5.7 2.8q1.55 1 2.85 2.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"19\",\"path\":[{\"color\":\"#171714\",\"colorOpacity\":\"1\",\"d\":\"M 137.4 463.1l0.4 -5.85l-3.55 2.35l-0.75 7l3.9 -3.5\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#171714\",\"colorOpacity\":\"1\",\"d\":\"M 187.25 398.4l-4.65 2.75l0 7.8l4.25 -3.9l0.4 -6.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#171714\",\"colorOpacity\":\"1\",\"d\":\"M 232 433.45l7.05 -6.2l-0.4 -9.75l-5.85 6.6l-0.8 9.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#101009\",\"colorOpacity\":\"1\",\"d\":\"M 364.1 278.45l0 9.75l8.6 -7.4l0 -7.8l-8.6 5.45\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"20\",\"path\":[{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 265.65 338.2l2.45 -30.75l-15.5 16.8l-2.8 31.2l15.85 -17.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 265.65 338.2l14.05 -15.25l3.25 -31.6l-14.85 16.1l-2.45 30.75\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 231.9 375.4l4.9 -5.45l13 -14.5l2.8 -31.2l-15.5 16.75l-5.2 34.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 350.75 240.3l12.55 -13.5l2.1 -33.75l-20.5 24.1l-3.8 33.5l9.65 -10.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 382.85 172.55l-17.45 20.5l-2.1 33.75l19.35 -22.05l0.2 -32.2\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 401.85 182.85l0.4 -33.2l-19.4 22.9l-0.2 32.2l19.2 -21.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#232d37\",\"colorOpacity\":\"1\",\"d\":\"M 402.25 149.65l-0.4 33.2l19.2 -21.9l0.65 -34.2l-19.45 22.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#474c4c\",\"colorOpacity\":\"1\",\"d\":\"M 402.25 149.65l-0.4 33.2\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#474c4c\",\"colorOpacity\":\"1\",\"d\":\"M 382.85 172.55l-0.2 32.2\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#474c4c\",\"colorOpacity\":\"1\",\"d\":\"M 365.4 193.05l-2.1 33.75\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#474c4c\",\"colorOpacity\":\"1\",\"d\":\"M 268.1 307.45l-2.45 30.75\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#474c4c\",\"colorOpacity\":\"1\",\"d\":\"M 252.6 324.25l-2.8 31.2\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#161310\",\"colorOpacity\":\"1\",\"d\":\"M 401.85 182.85l19.2 -21.9l0.65 -34.2l-19.45 22.9l-19.4 22.9\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"},{\"color\":\"#161310\",\"colorOpacity\":\"1\",\"d\":\"M 382.65 204.75l19.2 -21.9\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"},{\"color\":\"#161310\",\"colorOpacity\":\"1\",\"d\":\"M 350.75 240.3l-9.65 10.35l3.8 -33.5l20.5 -24.1l17.45 -20.5\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"},{\"color\":\"#161310\",\"colorOpacity\":\"1\",\"d\":\"M 382.65 204.75l-19.35 22.05l-12.55 13.5l-15.3 18.55\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"},{\"color\":\"#161310\",\"colorOpacity\":\"1\",\"d\":\"M 226.3 383.8l10.5 -13.85l-4.9 5.45l5.2 -34.4l15.5 -16.75l15.5 -16.8l14.85 -16.1l-3.25 31.6l-14.05 15.25l-15.85 17.25l-13 14.5\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"}]},{\"charid\":\"21\",\"path\":[{\"color\":\"#111318\",\"colorOpacity\":\"1\",\"d\":\"M 1189.3 655.6l16.75 2.15l-18.25 -42.45l-22.45 -4.6l23.95 44.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#111318\",\"colorOpacity\":\"1\",\"d\":\"M 1146.45 649.9l18.6 2.45l-21.55 -45.9l-17.4 -3.45l20.35 46.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#111318\",\"colorOpacity\":\"1\",\"d\":\"M 1165.35 610.7l-21.85 -4.25l21.55 45.9l24.25 3.25l-23.95 -44.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#060603\",\"colorOpacity\":\"1\",\"d\":\"M 1187.8 615.3l6.7 -5.8l-73.15 -18.2l4.75 11.7l17.4 3.45l21.85 4.25l22.45 4.6\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 1194.5 609.5l-6.7 5.8l18.25 42.45l9.3 0l-20.85 -48.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#111318\",\"colorOpacity\":\"1\",\"d\":\"M 1079.55 591.3l-81.9 -15l20.55 50.85l22.25 3.5l-19.4 -48.85l19.4 48.85l29.45 4.55l-20.95 -48.4l20.95 48.4l29.5 4.6l-19.85 -48.5\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 1087.35 583.75l-7.8 7.55l19.85 48.5l16.55 2.8l-28.6 -58.85\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#060603\",\"colorOpacity\":\"1\",\"d\":\"M 992.9 564.6l4.75 11.7l81.9 15l7.8 -7.55l-94.45 -19.15\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 997.65 576.3l81.9 15\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1187.8 615.3l18.25 42.45\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1126.1 603l17.4 3.45l21.85 4.25l22.45 4.6\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1079.55 591.3l19.85 48.5\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1165.05 652.35l-21.55 -45.9\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1189.3 655.6l-23.95 -44.9\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1040.45 630.65l-19.4 -48.85\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 1069.9 635.2l-20.95 -48.4\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 997.65 576.3l-4.75 -11.7\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 1018.2 627.15l-20.55 -50.85\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 1121.35 591.3l4.75 11.7\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 1146.45 649.9l-20.35 -46.9\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"22\",\"path\":[{\"radialGradient\":{\"cx\":\"0\",\"cy\":\"0\",\"r\":\"157.85\",\"fx\":\"0\",\"fy\":\"0\",\"gradientTransform\":\"1,0,0.323,0.928,49.25,41.95\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0.247\"},{\"offset\":\"68.627\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0\"}]},\"d\":\"M 129.45 -43.7q-58 -35.5 -122.45 -35.5q-64.45 0 -97.65 35.5q-33.25 35.45 -15.75 85.7q17.5 50.2 75.5 85.7q57.95 35.5 122.4 35.5q64.45 0 97.7 -35.5q33.2 -35.5 15.7 -85.7q-17.5 -50.25 -75.45 -85.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"23\",\"path\":[{\"linearGradient\":{\"x1\":\"37.337\",\"y1\":\"14.737\",\"x2\":\"39.763\",\"y2\":\"5.662\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 64.25 22.1l14.65 -8.2l-78.9 -13.9l3.35 10.7l60.9 11.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"77.787\",\"y1\":\"56.15\",\"x2\":\"96.213\",\"y2\":\"45.05\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 85.2 83q0.85 0.2 9.3 0.95q4.2 0.35 8.25 0.7l-23.85 -70.75l-14.65 8.2l20.95 60.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"24\",\"path\":[{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 37.45 17l-6.2 -1.1l21.8 62.5l32.15 4.6l-20.95 -60.9l-26.8 -5.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 64.25 22.1l14.65 -8.2l-78.9 -13.9l3.35 10.7l22.6 4.2l5.25 0.9l6.25 1.2l26.8 5.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 85.2 83q0.85 0.2 9.3 0.95q4.2 0.35 8.25 0.7l-23.85 -70.75l-14.65 8.2l20.95 60.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 37.45 17l-6.25 -1.2l0.05 0.1l6.2 1.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 25.95 14.9l5.3 1l-0.05 -0.1l-5.25 -0.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 31.25 15.9l-5.3 -1l-22.6 -4.2l22.45 64.1l27.25 3.6l-21.8 -62.5\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#2e3131\",\"colorOpacity\":\"1\",\"d\":\"M 64.25 22.1l20.95 60.9\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2e3131\",\"colorOpacity\":\"1\",\"d\":\"M 31.25 15.9l-5.3 -1l-22.6 -4.2\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2e3131\",\"colorOpacity\":\"1\",\"d\":\"M 31.25 15.9l6.2 1.1l26.8 5.1\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1d1d1c\",\"colorOpacity\":\"1\",\"d\":\"M 25.8 74.8l-22.45 -64.1l-3.35 -10.7\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1e2123\",\"colorOpacity\":\"1\",\"d\":\"M 31.2 15.8l0.05 0.1l21.8 62.5\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"25\",\"path\":[{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 27.25 15.15l-2.7 -0.5q-0.7 -0.15 -1.4 -0.25q-9.95 -1.9 -19.8 -3.7l22.45 64.1l27.25 3.6l-21.8 -62.5q-1.35 -0.25 -2.65 -0.5q-0.7 -0.15 -1.35 -0.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 40.8 17.65q11.7 2.2 23.45 4.45l14.65 -8.2l-78.9 -13.9l3.35 10.7q9.85 1.8 19.8 3.7q0.7 0.1 1.4 0.25l2.7 0.5q0.65 0.1 1.35 0.25q1.3 0.25 2.65 0.5l7.45 1.35q1.05 0.2 2.1 0.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 64.25 22.1q-11.75 -2.25 -23.45 -4.45q-1.05 -0.2 -2.1 -0.4l-7.45 -1.35l21.8 62.5l32.15 4.6l-20.95 -60.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 85.2 83q0.85 0.2 9.3 0.95q4.2 0.35 8.25 0.7l-23.85 -70.75l-14.65 8.2l20.95 60.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 25.8 74.8l-22.45 -64.1l-3.35 -10.7\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 31.25 15.9l21.8 62.5\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 64.25 22.1l20.95 60.9\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"27\",\"path\":[{\"radialGradient\":{\"cx\":\"0\",\"cy\":\"0\",\"r\":\"138.05\",\"fx\":\"0\",\"fy\":\"0\",\"gradientTransform\":\"1,0,0.426,0.865,43.25,29.1\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0.247\"},{\"offset\":\"68.627\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0\"}]},\"d\":\"M -10.55 -80.15q-56.65 0 -80.95 32q-24.3 32 -2 77.3q22.3 45.25 78.1 77.25q55.85 32.05 112.5 32.05q56.65 0 80.9 -32.05q24.3 -32 2 -77.25q-22.3 -45.3 -78.1 -77.3q-55.8 -32 -112.45 -32\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"28\",\"path\":[{\"linearGradient\":{\"x1\":\"32.812\",\"y1\":\"12.925\",\"x2\":\"34.588\",\"y2\":\"4.175\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 58.75 21.4l9.4 -7.75l-68.15 -13.65l3.35 10.7l55.4 10.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"71.15\",\"y1\":\"43.862\",\"x2\":\"81.85\",\"y2\":\"39.538\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 68.15 13.65l-9.4 7.75l14.85 41.7q0.55 0.6 6.9 0.75q6.3 0.15 7.65 -0.55l-20 -49.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"29\",\"path\":[{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 33 16.45l-29.65 -5.75l14.6 42.65l28.25 5.75l-13.2 -42.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 58.75 21.4l9.4 -7.75l-68.15 -13.65l3.35 10.7l29.65 5.75l25.75 4.95\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 46.2 59.1l27.4 4l-14.85 -41.7l-25.75 -4.95l13.2 42.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 68.15 13.65l-9.4 7.75l14.85 41.7q0.55 0.6 6.9 0.75q6.3 0.15 7.65 -0.55l-20 -49.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#1f1f1d\",\"colorOpacity\":\"1\",\"d\":\"M 0 0l3.35 10.7\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1f1f1d\",\"colorOpacity\":\"1\",\"d\":\"M 17.95 53.35l-14.6 -42.65\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 3.35 10.7l29.65 5.75l25.75 4.95\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 33 16.45l13.2 42.65\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2e3131\",\"colorOpacity\":\"1\",\"d\":\"M 58.75 21.4l14.85 41.7\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"30\",\"path\":[{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 33.35 16.5l-0.35 -0.05l13.2 42.65l27.4 4l-14.85 -41.7q-12.7 -2.45 -25.4 -4.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 32.05 16.25q-0.45 -0.1 -0.9 -0.2q-13.95 -2.7 -27.8 -5.35l14.6 42.65l28.25 5.75l-13.2 -42.65l-0.95 -0.2\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 58.75 21.4l9.4 -7.75l-68.15 -13.65l3.35 10.7q13.85 2.65 27.8 5.35q0.45 0.1 0.9 0.2l1.3 0.25q12.7 2.45 25.4 4.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 68.15 13.65l-9.4 7.75l14.85 41.7q0.55 0.6 6.9 0.75q6.3 0.15 7.65 -0.55l-20 -49.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 0 0l3.35 10.7\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 17.95 53.35l-14.6 -42.65\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 33 16.45l13.2 42.65\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 58.75 21.4l14.85 41.7\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 3.35 10.7q13.85 2.65 27.8 5.35q0.45 0.1 0.9 0.2\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 33.35 16.5q12.7 2.45 25.4 4.9\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 32.05 16.25l0.95 0.2l0.35 0.05\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"32\",\"path\":[{\"radialGradient\":{\"cx\":\"0\",\"cy\":\"0\",\"r\":\"94.175\",\"fx\":\"0\",\"fy\":\"0\",\"gradientTransform\":\"1,0,0.426,1.002,43.25,29.15\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0.247\"},{\"offset\":\"68.627\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0\"}]},\"d\":\"M 83.25 -31.9q-38.05 -25.3 -76.7 -25.3q-38.65 0 -55.2 25.3q-16.6 25.3 -1.4 61.1q15.25 35.75 53.3 61.05q38.1 25.35 76.75 25.35q38.65 0 55.2 -25.35q16.55 -25.3 1.35 -61.05q-15.2 -35.8 -53.3 -61.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"33\",\"path\":[{\"linearGradient\":{\"x1\":\"59.487\",\"y1\":\"40.513\",\"x2\":\"66.912\",\"y2\":\"36.487\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 60.65 17.65l-8.8 7.75l10 29.4l11.05 1.8l-12.25 -38.95\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"27.337\",\"y1\":\"16.638\",\"x2\":\"29.863\",\"y2\":\"9.962\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 43.3 22.9q1.15 0.35 2.35 0.7q3.1 0.9 6.2 1.8l8.8 -7.75l-60.65 -17.65l3.55 10.9l39.75 12\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"34\",\"path\":[{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 15.25 14.55l11.6 3.75l14.1 3.95l-25.7 -7.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 13.5 41.3l24.15 6.75l-10.8 -29.75l-11.6 -3.75l-11.7 -3.65l9.95 30.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 60.65 17.65l-8.8 7.75l10 29.4l11.4 0.5l-12.6 -37.65\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 45.65 23.6l-4.7 -1.35l-14.1 -3.95l10.8 29.75l24.2 6.75l-10 -29.4q-3.1 -0.9 -6.2 -1.8\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 40.95 22.25l4.7 1.35q3.1 0.9 6.2 1.8l8.8 -7.75l-60.65 -17.65l3.55 10.9l11.7 3.65l25.7 7.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#2f3437\",\"colorOpacity\":\"1\",\"d\":\"M 40.95 22.25l4.7 1.35q3.1 0.9 6.2 1.8\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2f3437\",\"colorOpacity\":\"1\",\"d\":\"M 3.55 10.9l11.7 3.65l25.7 7.7\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1f1f1d\",\"colorOpacity\":\"1\",\"d\":\"M 0 0l3.55 10.9\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1f1f1d\",\"colorOpacity\":\"1\",\"d\":\"M 13.5 41.3l-9.95 -30.4\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 26.85 18.3l10.8 29.75\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2e3131\",\"colorOpacity\":\"1\",\"d\":\"M 61.85 54.8l-10 -29.4\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"35\",\"path\":[{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 15.25 14.55l11.6 3.75l14.1 3.95l-25.7 -7.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 12.3 13.6l-8.75 -2.7l9.95 30.4l24.15 6.75l-10.8 -29.75l-11.6 -3.75l-2.95 -0.95\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 60.65 17.65l-8.8 7.75l10 29.4l11.05 1.8l-12.25 -38.95\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 45.65 23.6q-1.2 -0.35 -2.35 -0.7l-2.35 -0.65l-14.1 -3.95l10.8 29.75l24.2 6.75l-10 -29.4q-3.1 -0.9 -6.2 -1.8\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 43.3 22.9q1.15 0.35 2.35 0.7q3.1 0.9 6.2 1.8l8.8 -7.75l-60.65 -17.65l3.55 10.9l8.75 2.7l31 9.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 0 0l3.55 10.9\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 26.85 18.3l10.8 29.75\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 13.5 41.3l-9.95 -30.4\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 43.3 22.9q1.15 0.35 2.35 0.7q3.1 0.9 6.2 1.8\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 3.55 10.9l8.75 2.7\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 43.3 22.9l-2.35 -0.65\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 61.85 54.8l-10 -29.4\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 12.3 13.6l2.95 0.95l25.7 7.7\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"37\",\"path\":[{\"radialGradient\":{\"cx\":\"0\",\"cy\":\"0\",\"r\":\"67.325\",\"fx\":\"0\",\"fy\":\"0\",\"gradientTransform\":\"1,0,0.426,0.785,29.5,27.85\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0.247\"},{\"offset\":\"68.627\",\"stopColor\":\"#766041\",\"stopOpacity\":\"0\"}]},\"d\":\"M 58.1 -6.35q-27.2 -14.15 -54.8 -14.15q-27.65 0 -39.5 14.15q-11.85 14.2 -1 34.25q10.9 20.05 38.1 34.25q27.25 14.2 54.9 14.2q27.65 0 39.45 -14.2q11.85 -14.2 1 -34.25q-10.9 -20.05 -38.15 -34.25\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"38\",\"path\":[{\"linearGradient\":{\"x1\":\"22.162\",\"y1\":\"15.675\",\"x2\":\"25.938\",\"y2\":\"7.125\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 47.5 24.45l3.7 -9.7l-51.2 -14.75l3 11.1q6.75 2 13.5 4q1 0.3 2.05 0.6l14.7 4.45q7.1 2.15 14.25 4.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"52.487\",\"y1\":\"33.138\",\"x2\":\"58.013\",\"y2\":\"30.362\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#56462f\",\"stopOpacity\":\"0.498\"},{\"offset\":\"100\",\"stopColor\":\"#20201e\",\"stopOpacity\":\"0.498\"}]},\"d\":\"M 51.2 14.75l-3.7 9.7l8.3 23.75q3.95 2.05 8.5 -3.1l-13.1 -30.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"39\",\"path\":[{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 16.5 15.1q-6.75 -2 -13.5 -4l6.25 23.3l24.8 7.45l-9.35 -24.25l-6.15 -1.9q-1.05 -0.3 -2.05 -0.6\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l-0.05 -0.15l-6.1 -1.75l6.15 1.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l6.4 1.9l-6.45 -2.05l0.05 0.15\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 47.5 24.45l3.7 -9.7l-51.2 -14.75l3 11.1q6.75 2 13.5 4q1 0.3 2.05 0.6l6.1 1.75l6.45 2.05l2.15 0.65q7.1 2.15 14.25 4.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 55.8 48.2l-8.3 -23.75q-7.15 -2.15 -14.25 -4.3l-2.15 -0.65l-6.4 -1.9l9.35 24.25l21.75 6.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 47.5 24.45l8.3 23.75q3.95 2.05 8.5 -3.1l-13.1 -30.35l-3.7 9.7\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#2e3131\",\"colorOpacity\":\"1\",\"d\":\"M 47.5 24.45l8.3 23.75\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2f3437\",\"colorOpacity\":\"1\",\"d\":\"M 47.5 24.45q-7.15 -2.15 -14.25 -4.3l-2.15 -0.65l-6.4 -1.9l-6.15 -1.9q-1.05 -0.3 -2.05 -0.6q-6.75 -2 -13.5 -4\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l9.35 24.25\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#2a2d2d\",\"colorOpacity\":\"1\",\"d\":\"M 24.65 17.45l0.05 0.15\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1f1f1d\",\"colorOpacity\":\"1\",\"d\":\"M 3 11.1l6.25 23.3\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#1f1f1d\",\"colorOpacity\":\"1\",\"d\":\"M 3 11.1l-3 -11.1\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"40\",\"path\":[{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 18.55 15.7q-1.05 -0.3 -2.05 -0.6q-6.75 -2 -13.5 -4l6.25 23.3l24.8 7.45l-9.35 -24.25l-6.15 -1.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l-0.05 -0.15l-6.1 -1.75l6.15 1.9\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f1317\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l6.4 1.9l-6.45 -2.05l0.05 0.15\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0f0f0c\",\"colorOpacity\":\"1\",\"d\":\"M 47.5 24.45l3.7 -9.7l-51.2 -14.75l3 11.1q6.75 2 13.5 4q1 0.3 2.05 0.6l6.1 1.75l6.45 2.05l2.15 0.65q7.1 2.15 14.25 4.3\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#766041\",\"colorOpacity\":\"1\",\"d\":\"M 55.8 48.2l-8.3 -23.75q-7.15 -2.15 -14.25 -4.3l-2.15 -0.65l-6.4 -1.9l9.35 24.25l21.75 6.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#20201e\",\"colorOpacity\":\"1\",\"d\":\"M 64.3 45.1l-13.1 -30.35l-3.7 9.7l8.3 23.75q3.95 2.05 8.5 -3.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 47.5 24.45l8.3 23.75\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l6.4 1.9\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 24.7 17.6l-6.15 -1.9q-1.05 -0.3 -2.05 -0.6q-6.75 -2 -13.5 -4\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 31.1 19.5l2.15 0.65q7.1 2.15 14.25 4.3\",\"strokeWidth\":\"1\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 9.25 34.4l-6.25 -23.3l-3 -11.1\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"},{\"color\":\"#3a322c\",\"colorOpacity\":\"1\",\"d\":\"M 24.65 17.45l0.05 0.15l9.35 24.25\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"42\",\"path\":[{\"color\":\"#1c1615\",\"colorOpacity\":\"1\",\"d\":\"M 889.15 307.5l19.1 43.85l318.6 92l0 -35.4l-337.7 -100.45\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"742.612\",\"y1\":\"802.3\",\"x2\":\"847.788\",\"y2\":\"318.5\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#2c190a\",\"stopOpacity\":\"1\"},{\"offset\":\"48.235\",\"stopColor\":\"#221a19\",\"stopOpacity\":\"1\"}]},\"d\":\"M 822.8 147.1l0.85 -1.2l-364.35 -136.9q-2.4 4.7 -1.85 8.75l-15.8 799.5l785.2 0l0 -373.9l-318.6 -92l-19.1 -43.85l-66.35 -160.4\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#39342e\",\"colorOpacity\":\"1\",\"d\":\"M 123.7 417.7q-0.15 3.9 0.75 7.95q0 3.9 -3 8.9l-121.45 382.7l416.9 0l31.65 -791.6l-324.85 392.05\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"423.237\",\"y1\":\"811.7\",\"x2\":\"454.362\",\"y2\":\"26\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#392d25\",\"stopOpacity\":\"1\"},{\"offset\":\"100\",\"stopColor\":\"#14130f\",\"stopOpacity\":\"1\"}]},\"d\":\"M 453.85 28.2l-5.3 -2.55l-31.65 791.6l12.35 0l24.6 -789.05\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"linearGradient\":{\"x1\":\"427.538\",\"y1\":\"804.8\",\"x2\":\"454.262\",\"y2\":\"299.5\",\"spreadMethod\":\"pad\",\"stop\":[{\"offset\":\"0\",\"stopColor\":\"#2d1f16\",\"stopOpacity\":\"1\"},{\"offset\":\"100\",\"stopColor\":\"#14130f\",\"stopOpacity\":\"1\"}]},\"d\":\"M 457.45 17.75q-2.55 3.35 -1.9 6.65l-1.7 3.8l-24.6 789.05l12.4 0l15.8 -799.5\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#0a0a07\",\"colorOpacity\":\"1\",\"d\":\"M 825.9 142.75q2.15 -3.1 -2.1 -5.5l-367.8 -137.25l-6.1 18.35l-3.6 -1.75q-11.2 13.9 -22.4 27.75q-134.8 166.75 -271.1 329.35q-12.3 14.7 -24.65 29.35q-4.2 7.05 -4.45 14.65l324.85 -392.05l5.3 2.55l1.7 -3.8q-0.65 -3.3 1.9 -6.65q-0.55 -4.05 1.85 -8.75l364.35 136.9l2.25 -3.15\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#050500\",\"colorOpacity\":\"1\",\"d\":\"M 1226.85 443.35l-318.6 -92\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"square\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"43\",\"path\":[{\"color\":\"#050500\",\"colorOpacity\":\"1\",\"d\":\"M 1226.85 407.95l-337.7 -100.45\",\"strokeWidth\":\"3\",\"fill\":\"none\",\"strokeLinecap\":\"square\",\"strokeLinejoin\":\"round\",\"pathType\":\"Stroke\"}]},{\"charid\":\"44\",\"path\":[{\"color\":\"#151515\",\"colorOpacity\":\"1\",\"d\":\"M 449.9 18.35l-3.6 -1.75q-11.2 13.9 -22.4 27.75q-134.8 166.75 -271.1 329.35q-12.3 14.7 -24.65 29.35q-4.2 7.05 -4.45 14.65q-0.15 3.9 0.75 7.95q0 3.9 -3 8.9l-121.45 382.7l1226.85 0l0 -409.3l-337.7 -100.45l-66.35 -160.4l3.1 -4.35q2.15 -3.1 -2.1 -5.5l-367.8 -137.25l-6.1 18.35\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"46\",\"path\":[{\"color\":\"#f0e4ff\",\"colorOpacity\":\"1\",\"d\":\"M 10.9 -1.55l-0.3 0l-0.4 0.25q-0.45 0.45 -0.3 1.1q0.15 0.65 0.8 0.8q0.6 0.15 1.1 -0.25q0.5 -0.6 0.25 -1.25q-0.35 -0.75 -1.1 -0.75q0.1 0.1 -0.05 0.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"}]},{\"charid\":\"47\",\"path\":[{\"color\":\"#243c61\",\"colorOpacity\":\"1\",\"d\":\"M 9.1 5.05l0.95 -4.35l-3.95 2.7l0.2 0.55l2.8 1.1\",\"pathType\":\"Fill\",\"stroke\":\"none\"},{\"color\":\"#243c61\",\"colorOpacity\":\"1\",\"d\":\"M 9.1 5.05l4.95 1.9l1.55 -0.1\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"},{\"color\":\"#243c61\",\"colorOpacity\":\"1\",\"d\":\"M 0.8 1.75l5.5 2.2l-0.2 -0.55l3.95 -2.7l-0.95 4.35l-2.8 -1.1l2.1 4.25l0.7 -3.15\",\"strokeWidth\":\"2\",\"fill\":\"none\",\"strokeLinecap\":\"round\",\"strokeLinejoin\":\"miter\",\"stroke-miterlimit\":\"3\",\"pathType\":\"Stroke\"}]}],\"Bitmaps\":[],\"Sounds\":[],\"Text\":[],\"Timeline\":[{\"charid\":\"4\",\"frameCount\":\"1\",\"name\":\"contact\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"1\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"2\",\"objectId\":\"2\",\"placeAfter\":\"1\",\"transformMatrix\":\"1,0,0,1,-463.6,-583.55\"},{\"cmdType\":\"Place\",\"charid\":\"3\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"}]}]},{\"charid\":\"9\",\"frameCount\":\"1\",\"name\":\"osp\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"5\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"6\",\"objectId\":\"2\",\"placeAfter\":\"1\",\"transformMatrix\":\"1,0,0,1,-460.2,-358.25\"},{\"cmdType\":\"Place\",\"charid\":\"7\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,-460.2,-358.25\"},{\"cmdType\":\"Place\",\"charid\":\"8\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,0,0\"}]}]},{\"charid\":\"14\",\"frameCount\":\"1\",\"name\":\"Symbol 2\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"10\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"11\",\"objectId\":\"2\",\"placeAfter\":\"1\",\"transformMatrix\":\"1,0,0,1,-459.65,-197.55\"},{\"cmdType\":\"Place\",\"charid\":\"12\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,-459.65,-198.55\"},{\"cmdType\":\"Place\",\"charid\":\"13\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,0,0\"}]}]},{\"charid\":\"18\",\"frameCount\":\"1\",\"name\":\"art_deco\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"15\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"16\",\"objectId\":\"2\",\"placeAfter\":\"1\",\"transformMatrix\":\"1,0,0,1,-460.2,-103.5\"},{\"cmdType\":\"Place\",\"charid\":\"17\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"}]}]},{\"charid\":\"26\",\"frameCount\":\"2\",\"name\":\"Symbol 5\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"24\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"AddFrameScript\",\"scriptId\":\"2\",\"script\":\"this.stop()\"}]},{\"num\":\"1\",\"Command\":[{\"cmdType\":\"Remove\",\"objectId\":\"1\"},{\"cmdType\":\"Place\",\"charid\":\"22\",\"objectId\":\"2\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"23\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"25\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"RemoveFrameScript\",\"scriptId\":\"2\"}]}]},{\"charid\":\"31\",\"frameCount\":\"2\",\"name\":\"Symbol 4\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"29\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"AddFrameScript\",\"scriptId\":\"2\",\"script\":\"this.stop()\\n\"}]},{\"num\":\"1\",\"Command\":[{\"cmdType\":\"Remove\",\"objectId\":\"1\"},{\"cmdType\":\"Place\",\"charid\":\"27\",\"objectId\":\"2\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"28\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"30\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"RemoveFrameScript\",\"scriptId\":\"2\"}]}]},{\"charid\":\"36\",\"frameCount\":\"2\",\"name\":\"Symbol 3\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"34\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"AddFrameScript\",\"scriptId\":\"2\",\"script\":\"this.stop()\"}]},{\"num\":\"1\",\"Command\":[{\"cmdType\":\"Remove\",\"objectId\":\"1\"},{\"cmdType\":\"Place\",\"charid\":\"32\",\"objectId\":\"2\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"33\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"35\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"RemoveFrameScript\",\"scriptId\":\"2\"}]}]},{\"charid\":\"41\",\"frameCount\":\"2\",\"name\":\"about_win\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"39\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"AddFrameScript\",\"scriptId\":\"2\",\"script\":\"this.stop()\\n\"}]},{\"num\":\"1\",\"Command\":[{\"cmdType\":\"Remove\",\"objectId\":\"1\"},{\"cmdType\":\"Place\",\"charid\":\"37\",\"objectId\":\"2\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"38\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"40\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"RemoveFrameScript\",\"scriptId\":\"2\"}]}]},{\"charid\":\"45\",\"frameCount\":\"1\",\"name\":\"Symbol 1\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"42\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"43\",\"objectId\":\"2\",\"placeAfter\":\"1\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"44\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,0,0\"}]}]},{\"charid\":\"48\",\"frameCount\":\"22\",\"name\":\"plane\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"47\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"}]},{\"num\":\"20\",\"Command\":[{\"cmdType\":\"Place\",\"charid\":\"46\",\"objectId\":\"2\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,0,0\"}]}]},{\"frameCount\":\"610\",\"Frame\":[{\"num\":\"0\",\"Command\":[{\"cmdType\":\"AddFrameScript\",\"scriptId\":\"0\",\"script\":\"assignLightUp(this.contact, this.contact_win)\\nassignLightUp(this.packages, this.packages_win)\\nassignLightUp(this.node, this.node_win)\\nassignLightUp(this.about, this.about_win)\\n\\nfunction assignLightUp(target, win) {\\n\\ttarget.mouseover(function () {\\n\\t\\twin.gotoAndStop(2)\\n\\t});\\n\\ttarget.mouseout(function () {\\n\\t\\twin.gotoAndStop(1)\\n\\t});\\n}\"},{\"cmdType\":\"Place\",\"charid\":\"4\",\"objectId\":\"1\",\"placeAfter\":\"0\",\"transformMatrix\":\"1,0,0,1,488.35,602.6\",\"name\":\"contact\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"1\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"1\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"1\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"9\",\"objectId\":\"2\",\"placeAfter\":\"1\",\"transformMatrix\":\"1,0,0,1,484.95,375.7\",\"name\":\"packages\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"2\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"2\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"2\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"14\",\"objectId\":\"3\",\"placeAfter\":\"2\",\"transformMatrix\":\"1,0,0,1,484.4,215.5\",\"name\":\"node\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"3\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"3\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"3\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"18\",\"objectId\":\"4\",\"placeAfter\":\"3\",\"transformMatrix\":\"1,0,0,1,484.95,120.95\",\"name\":\"about\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"4\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"4\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"4\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"19\",\"objectId\":\"5\",\"placeAfter\":\"4\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"20\",\"objectId\":\"6\",\"placeAfter\":\"5\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"21\",\"objectId\":\"7\",\"placeAfter\":\"6\",\"transformMatrix\":\"1,0,0,1,0,0\"},{\"cmdType\":\"Place\",\"charid\":\"26\",\"objectId\":\"8\",\"placeAfter\":\"7\",\"transformMatrix\":\"1,0,0,1,897.9,640.15\",\"name\":\"contact_win\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"8\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"8\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"8\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"31\",\"objectId\":\"9\",\"placeAfter\":\"8\",\"transformMatrix\":\"1,0,0,1,829.75,445.7\",\"name\":\"packages_win\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"9\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"9\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"9\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"36\",\"objectId\":\"10\",\"placeAfter\":\"9\",\"transformMatrix\":\"1,0,0,1,783.55,300.3\",\"name\":\"node_win\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"10\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"10\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"10\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"41\",\"objectId\":\"11\",\"placeAfter\":\"10\",\"transformMatrix\":\"1,0,0,1,746.95,190.5\",\"name\":\"about_win\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"11\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"11\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"11\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"45\",\"objectId\":\"12\",\"placeAfter\":\"11\",\"transformMatrix\":\"1,0,0,1,0,32.75\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"12\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"12\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"12\",\"blendMode\":\"Normal\"},{\"cmdType\":\"Place\",\"charid\":\"48\",\"objectId\":\"13\",\"placeAfter\":\"12\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1227.45,387.65\"},{\"cmdType\":\"UpdateColorTransform\",\"objectId\":\"13\",\"colorMatrix\":\"1,0,1,0,1,0,1,0,\"},{\"cmdType\":\"UpdateVisibility\",\"objectId\":\"13\",\"visibility\":\"true\"},{\"cmdType\":\"UpdateBlendMode\",\"objectId\":\"13\",\"blendMode\":\"Normal\"}]},{\"num\":\"1\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1225.028,386.926\"}]},{\"num\":\"2\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1222.628,386.126\"}]},{\"num\":\"3\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1220.178,385.326\"}]},{\"num\":\"4\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1217.778,384.526\"}]},{\"num\":\"5\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1215.378,383.726\"}]},{\"num\":\"6\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1212.978,382.926\"}]},{\"num\":\"7\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1210.578,382.126\"}]},{\"num\":\"8\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1208.178,381.376\"}]},{\"num\":\"9\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1205.778,380.576\"}]},{\"num\":\"10\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1203.378,379.776\"}]},{\"num\":\"11\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1200.978,378.976\"}]},{\"num\":\"12\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1198.578,378.176\"}]},{\"num\":\"13\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1196.128,377.376\"}]},{\"num\":\"14\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1193.778,376.576\"}]},{\"num\":\"15\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1191.328,375.776\"}]},{\"num\":\"16\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1188.928,374.976\"}]},{\"num\":\"17\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1186.528,374.176\"}]},{\"num\":\"18\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1184.128,373.376\"}]},{\"num\":\"19\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1181.728,372.576\"}]},{\"num\":\"20\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1179.328,371.776\"}]},{\"num\":\"21\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1176.928,370.976\"}]},{\"num\":\"22\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1174.528,370.176\"}]},{\"num\":\"23\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1172.078,369.376\"}]},{\"num\":\"24\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1169.678,368.626\"}]},{\"num\":\"25\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1167.278,367.826\"}]},{\"num\":\"26\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1164.878,367.026\"}]},{\"num\":\"27\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1162.478,366.226\"}]},{\"num\":\"28\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1160.078,365.426\"}]},{\"num\":\"29\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1157.678,364.626\"}]},{\"num\":\"30\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1155.278,363.826\"}]},{\"num\":\"31\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1152.828,363.026\"}]},{\"num\":\"32\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1150.478,362.226\"}]},{\"num\":\"33\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1148.028,361.426\"}]},{\"num\":\"34\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1145.628,360.626\"}]},{\"num\":\"35\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1143.228,359.826\"}]},{\"num\":\"36\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1140.828,359.026\"}]},{\"num\":\"37\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1138.428,358.226\"}]},{\"num\":\"38\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1136.028,357.476\"}]},{\"num\":\"39\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1133.578,356.626\"}]},{\"num\":\"40\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1131.228,355.876\"}]},{\"num\":\"41\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1128.778,355.076\"}]},{\"num\":\"42\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1126.378,354.276\"}]},{\"num\":\"43\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1123.978,353.476\"}]},{\"num\":\"44\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1121.578,352.676\"}]},{\"num\":\"45\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1119.178,351.876\"}]},{\"num\":\"46\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1116.778,351.076\"}]},{\"num\":\"47\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1114.378,350.276\"}]},{\"num\":\"48\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1111.978,349.476\"}]},{\"num\":\"49\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1109.528,348.676\"}]},{\"num\":\"50\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1107.178,347.876\"}]},{\"num\":\"51\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1104.728,347.076\"}]},{\"num\":\"52\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1102.328,346.276\"}]},{\"num\":\"53\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1099.928,345.476\"}]},{\"num\":\"54\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1097.528,344.676\"}]},{\"num\":\"55\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1095.128,343.926\"}]},{\"num\":\"56\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1092.728,343.126\"}]},{\"num\":\"57\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1090.278,342.326\"}]},{\"num\":\"58\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1087.878,341.526\"}]},{\"num\":\"59\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1085.478,340.726\"}]},{\"num\":\"60\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1083.078,339.926\"}]},{\"num\":\"61\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1080.678,339.126\"}]},{\"num\":\"62\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1078.278,338.326\"}]},{\"num\":\"63\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1075.878,337.526\"}]},{\"num\":\"64\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1073.478,336.726\"}]},{\"num\":\"65\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1071.078,335.926\"}]},{\"num\":\"66\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1068.678,335.126\"}]},{\"num\":\"67\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1066.228,334.326\"}]},{\"num\":\"68\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1063.878,333.526\"}]},{\"num\":\"69\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1061.428,332.726\"}]},{\"num\":\"70\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1059.028,331.976\"}]},{\"num\":\"71\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1056.628,331.176\"}]},{\"num\":\"72\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1054.228,330.376\"}]},{\"num\":\"73\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1051.828,329.576\"}]},{\"num\":\"74\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1049.428,328.776\"}]},{\"num\":\"75\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1046.978,327.976\"}]},{\"num\":\"76\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1044.628,327.176\"}]},{\"num\":\"77\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1042.178,326.376\"}]},{\"num\":\"78\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1039.778,325.576\"}]},{\"num\":\"79\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1037.378,324.776\"}]},{\"num\":\"80\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1034.978,323.976\"}]},{\"num\":\"81\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1032.578,323.176\"}]},{\"num\":\"82\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1030.178,322.376\"}]},{\"num\":\"83\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1027.778,321.576\"}]},{\"num\":\"84\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1025.378,320.776\"}]},{\"num\":\"85\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1022.928,319.976\"}]},{\"num\":\"86\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1020.528,319.226\"}]},{\"num\":\"87\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1018.128,318.426\"}]},{\"num\":\"88\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1015.728,317.626\"}]},{\"num\":\"89\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1013.328,316.826\"}]},{\"num\":\"90\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1010.928,316.026\"}]},{\"num\":\"91\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1008.528,315.226\"}]},{\"num\":\"92\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1006.128,314.426\"}]},{\"num\":\"93\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1003.728,313.626\"}]},{\"num\":\"94\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,1001.278,312.826\"}]},{\"num\":\"95\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,998.878,312.026\"}]},{\"num\":\"96\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,996.478,311.226\"}]},{\"num\":\"97\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,994.078,310.426\"}]},{\"num\":\"98\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,991.678,309.626\"}]},{\"num\":\"99\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,989.278,308.826\"}]},{\"num\":\"100\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,986.878,308.026\"}]},{\"num\":\"101\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,984.478,307.226\"}]},{\"num\":\"102\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,982.078,306.476\"}]},{\"num\":\"103\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,979.628,305.676\"}]},{\"num\":\"104\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,977.278,304.876\"}]},{\"num\":\"105\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,974.828,304.076\"}]},{\"num\":\"106\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,972.428,303.276\"}]},{\"num\":\"107\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,970.028,302.476\"}]},{\"num\":\"108\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,967.628,301.676\"}]},{\"num\":\"109\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,965.228,300.876\"}]},{\"num\":\"110\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,962.828,300.076\"}]},{\"num\":\"111\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,960.428,299.276\"}]},{\"num\":\"112\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,958.028,298.476\"}]},{\"num\":\"113\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,955.578,297.676\"}]},{\"num\":\"114\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,953.178,296.876\"}]},{\"num\":\"115\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,950.778,296.076\"}]},{\"num\":\"116\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,948.378,295.326\"}]},{\"num\":\"117\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,945.978,294.526\"}]},{\"num\":\"118\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,943.578,293.726\"}]},{\"num\":\"119\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,941.178,292.926\"}]},{\"num\":\"120\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,938.778,292.126\"}]},{\"num\":\"121\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,936.328,291.326\"}]},{\"num\":\"122\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,933.978,290.526\"}]},{\"num\":\"123\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,931.528,289.726\"}]},{\"num\":\"124\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,929.128,288.926\"}]},{\"num\":\"125\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,926.728,288.126\"}]},{\"num\":\"126\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,924.328,287.326\"}]},{\"num\":\"127\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,921.928,286.526\"}]},{\"num\":\"128\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,919.528,285.726\"}]},{\"num\":\"129\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,917.078,284.926\"}]},{\"num\":\"130\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,914.728,284.126\"}]},{\"num\":\"131\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,912.278,283.326\"}]},{\"num\":\"132\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,909.878,282.576\"}]},{\"num\":\"133\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,907.478,281.776\"}]},{\"num\":\"134\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,905.078,280.976\"}]},{\"num\":\"135\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,902.678,280.176\"}]},{\"num\":\"136\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,900.278,279.376\"}]},{\"num\":\"137\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,897.828,278.576\"}]},{\"num\":\"138\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,895.478,277.776\"}]},{\"num\":\"139\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,893.078,276.976\"}]},{\"num\":\"140\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,890.678,276.176\"}]},{\"num\":\"141\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,888.228,275.376\"}]},{\"num\":\"142\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,885.828,274.576\"}]},{\"num\":\"143\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,883.428,273.776\"}]},{\"num\":\"144\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,881.028,272.976\"}]},{\"num\":\"145\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,878.628,272.176\"}]},{\"num\":\"146\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,876.228,271.376\"}]},{\"num\":\"147\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,873.828,270.576\"}]},{\"num\":\"148\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,871.428,269.826\"}]},{\"num\":\"149\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,868.978,269.026\"}]},{\"num\":\"150\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,866.578,268.226\"}]},{\"num\":\"151\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,864.178,267.426\"}]},{\"num\":\"152\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,861.778,266.626\"}]},{\"num\":\"153\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,859.378,265.826\"}]},{\"num\":\"154\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,856.978,265.026\"}]},{\"num\":\"155\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,854.578,264.226\"}]},{\"num\":\"156\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,852.178,263.426\"}]},{\"num\":\"157\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,849.728,262.626\"}]},{\"num\":\"158\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,847.378,261.826\"}]},{\"num\":\"159\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,844.928,261.026\"}]},{\"num\":\"160\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,842.528,260.226\"}]},{\"num\":\"161\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,840.128,259.426\"}]},{\"num\":\"162\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,837.728,258.626\"}]},{\"num\":\"163\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,835.328,257.876\"}]},{\"num\":\"164\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,832.928,257.076\"}]},{\"num\":\"165\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,830.528,256.276\"}]},{\"num\":\"166\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,828.078,255.476\"}]},{\"num\":\"167\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,825.678,254.676\"}]},{\"num\":\"168\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,823.278,253.876\"}]},{\"num\":\"169\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,820.878,253.076\"}]},{\"num\":\"170\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,818.478,252.276\"}]},{\"num\":\"171\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,816.078,251.476\"}]},{\"num\":\"172\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,813.678,250.676\"}]},{\"num\":\"173\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,811.278,249.876\"}]},{\"num\":\"174\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,808.878,249.076\"}]},{\"num\":\"175\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,806.428,248.276\"}]},{\"num\":\"176\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,804.028,247.476\"}]},{\"num\":\"177\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,801.628,246.676\"}]},{\"num\":\"178\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,799.228,245.926\"}]},{\"num\":\"179\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,796.828,245.126\"}]},{\"num\":\"180\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,794.428,244.326\"}]},{\"num\":\"181\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,792.028,243.526\"}]},{\"num\":\"182\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,789.628,242.726\"}]},{\"num\":\"183\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,787.178,241.926\"}]},{\"num\":\"184\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,784.828,241.126\"}]},{\"num\":\"185\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,782.378,240.326\"}]},{\"num\":\"186\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,779.978,239.526\"}]},{\"num\":\"187\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,777.578,238.726\"}]},{\"num\":\"188\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,775.178,237.926\"}]},{\"num\":\"189\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,772.778,237.126\"}]},{\"num\":\"190\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,770.378,236.326\"}]},{\"num\":\"191\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,767.978,235.526\"}]},{\"num\":\"192\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,765.578,234.726\"}]},{\"num\":\"193\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,763.128,233.926\"}]},{\"num\":\"194\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,760.728,233.176\"}]},{\"num\":\"195\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,758.328,232.376\"}]},{\"num\":\"196\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,755.928,231.576\"}]},{\"num\":\"197\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,753.528,230.776\"}]},{\"num\":\"198\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,751.128,229.976\"}]},{\"num\":\"199\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,748.728,229.176\"}]},{\"num\":\"200\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,746.328,228.376\"}]},{\"num\":\"201\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,743.878,227.576\"}]},{\"num\":\"202\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,741.528,226.776\"}]},{\"num\":\"203\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,739.078,225.976\"}]},{\"num\":\"204\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,736.678,225.176\"}]},{\"num\":\"205\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,734.278,224.376\"}]},{\"num\":\"206\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,731.878,223.576\"}]},{\"num\":\"207\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,729.478,222.776\"}]},{\"num\":\"208\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,727.078,222.026\"}]},{\"num\":\"209\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,724.678,221.176\"}]},{\"num\":\"210\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,722.278,220.426\"}]},{\"num\":\"211\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,719.828,219.626\"}]},{\"num\":\"212\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,717.478,218.826\"}]},{\"num\":\"213\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,715.028,218.026\"}]},{\"num\":\"214\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,712.628,217.226\"}]},{\"num\":\"215\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,710.228,216.426\"}]},{\"num\":\"216\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,707.828,215.626\"}]},{\"num\":\"217\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,705.428,214.826\"}]},{\"num\":\"218\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,703.028,214.026\"}]},{\"num\":\"219\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,700.628,213.226\"}]},{\"num\":\"220\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,698.178,212.426\"}]},{\"num\":\"221\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,695.778,211.626\"}]},{\"num\":\"222\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,693.378,210.826\"}]},{\"num\":\"223\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,690.978,210.026\"}]},{\"num\":\"224\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,688.578,209.276\"}]},{\"num\":\"225\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,686.178,208.476\"}]},{\"num\":\"226\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,683.778,207.676\"}]},{\"num\":\"227\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,681.378,206.876\"}]},{\"num\":\"228\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,678.978,206.076\"}]},{\"num\":\"229\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,676.528,205.276\"}]},{\"num\":\"230\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,674.178,204.476\"}]},{\"num\":\"231\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,671.728,203.676\"}]},{\"num\":\"232\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,669.328,202.876\"}]},{\"num\":\"233\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,666.928,202.076\"}]},{\"num\":\"234\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,664.528,201.276\"}]},{\"num\":\"235\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,662.128,200.476\"}]},{\"num\":\"236\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,659.728,199.676\"}]},{\"num\":\"237\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,657.328,198.876\"}]},{\"num\":\"238\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,654.878,198.076\"}]},{\"num\":\"239\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,652.478,197.276\"}]},{\"num\":\"240\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,650.078,196.526\"}]},{\"num\":\"241\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,647.678,195.726\"}]},{\"num\":\"242\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,645.278,194.926\"}]},{\"num\":\"243\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,642.878,194.126\"}]},{\"num\":\"244\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,640.478,193.326\"}]},{\"num\":\"245\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,638.078,192.526\"}]},{\"num\":\"246\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,635.678,191.726\"}]},{\"num\":\"247\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,633.228,190.926\"}]},{\"num\":\"248\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,630.828,190.126\"}]},{\"num\":\"249\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,628.428,189.326\"}]},{\"num\":\"250\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,626.028,188.526\"}]},{\"num\":\"251\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,623.628,187.726\"}]},{\"num\":\"252\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,621.228,186.926\"}]},{\"num\":\"253\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,618.828,186.126\"}]},{\"num\":\"254\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,616.428,185.326\"}]},{\"num\":\"255\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,614.028,184.526\"}]},{\"num\":\"256\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,611.578,183.726\"}]},{\"num\":\"257\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,609.178,182.976\"}]},{\"num\":\"258\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,606.778,182.176\"}]},{\"num\":\"259\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,604.378,181.376\"}]},{\"num\":\"260\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,601.978,180.576\"}]},{\"num\":\"261\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,599.578,179.776\"}]},{\"num\":\"262\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,597.128,178.976\"}]},{\"num\":\"263\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,594.778,178.176\"}]},{\"num\":\"264\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,592.328,177.376\"}]},{\"num\":\"265\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,589.928,176.576\"}]},{\"num\":\"266\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,587.528,175.776\"}]},{\"num\":\"267\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,585.128,174.976\"}]},{\"num\":\"268\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,582.728,174.176\"}]},{\"num\":\"269\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,580.328,173.376\"}]},{\"num\":\"270\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,577.928,172.576\"}]},{\"num\":\"271\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,575.528,171.776\"}]},{\"num\":\"272\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,573.078,171.026\"}]},{\"num\":\"273\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,570.678,170.226\"}]},{\"num\":\"274\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,568.278,169.426\"}]},{\"num\":\"275\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,565.878,168.626\"}]},{\"num\":\"276\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,563.478,167.826\"}]},{\"num\":\"277\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,561.078,167.026\"}]},{\"num\":\"278\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,558.678,166.226\"}]},{\"num\":\"279\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,556.278,165.426\"}]},{\"num\":\"280\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,553.878,164.626\"}]},{\"num\":\"281\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,551.478,163.826\"}]},{\"num\":\"282\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,549.028,163.026\"}]},{\"num\":\"283\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,546.628,162.226\"}]},{\"num\":\"284\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,544.228,161.426\"}]},{\"num\":\"285\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,541.828,160.626\"}]},{\"num\":\"286\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,539.428,159.826\"}]},{\"num\":\"287\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,537.028,159.076\"}]},{\"num\":\"288\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,534.628,158.276\"}]},{\"num\":\"289\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,532.228,157.476\"}]},{\"num\":\"290\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,529.778,156.676\"}]},{\"num\":\"291\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,527.378,155.876\"}]},{\"num\":\"292\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,524.978,155.076\"}]},{\"num\":\"293\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,522.578,154.276\"}]},{\"num\":\"294\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,520.178,153.476\"}]},{\"num\":\"295\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,517.778,152.676\"}]},{\"num\":\"296\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,515.378,151.876\"}]},{\"num\":\"297\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,512.978,151.076\"}]},{\"num\":\"298\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,510.578,150.276\"}]},{\"num\":\"299\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,508.178,149.476\"}]},{\"num\":\"300\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,505.728,148.676\"}]},{\"num\":\"301\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,503.328,147.876\"}]},{\"num\":\"302\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,500.928,147.076\"}]},{\"num\":\"303\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,498.528,146.326\"}]},{\"num\":\"304\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,496.128,145.526\"}]},{\"num\":\"305\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,493.728,144.726\"}]},{\"num\":\"306\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,491.328,143.926\"}]},{\"num\":\"307\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,488.928,143.126\"}]},{\"num\":\"308\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,486.478,142.326\"}]},{\"num\":\"309\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,484.128,141.526\"}]},{\"num\":\"310\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,481.678,140.726\"}]},{\"num\":\"311\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,479.278,139.926\"}]},{\"num\":\"312\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,476.878,139.126\"}]},{\"num\":\"313\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,474.478,138.326\"}]},{\"num\":\"314\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,472.078,137.526\"}]},{\"num\":\"315\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,469.678,136.726\"}]},{\"num\":\"316\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,467.228,135.926\"}]},{\"num\":\"317\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,464.878,135.126\"}]},{\"num\":\"318\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,462.428,134.326\"}]},{\"num\":\"319\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,460.028,133.576\"}]},{\"num\":\"320\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,457.628,132.776\"}]},{\"num\":\"321\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,455.228,131.976\"}]},{\"num\":\"322\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,452.828,131.176\"}]},{\"num\":\"323\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,450.428,130.376\"}]},{\"num\":\"324\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,448.028,129.576\"}]},{\"num\":\"325\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,445.628,128.776\"}]},{\"num\":\"326\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,443.178,127.976\"}]},{\"num\":\"327\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,440.778,127.176\"}]},{\"num\":\"328\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,438.378,126.376\"}]},{\"num\":\"329\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,435.978,125.576\"}]},{\"num\":\"330\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,433.578,124.776\"}]},{\"num\":\"331\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,431.178,123.976\"}]},{\"num\":\"332\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,428.778,123.176\"}]},{\"num\":\"333\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,426.378,122.426\"}]},{\"num\":\"334\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,423.978,121.626\"}]},{\"num\":\"335\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,421.578,120.826\"}]},{\"num\":\"336\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,419.128,120.026\"}]},{\"num\":\"337\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,416.728,119.226\"}]},{\"num\":\"338\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,414.328,118.426\"}]},{\"num\":\"339\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,411.928,117.626\"}]},{\"num\":\"340\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,409.528,116.826\"}]},{\"num\":\"341\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,407.128,116.026\"}]},{\"num\":\"342\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,404.728,115.226\"}]},{\"num\":\"343\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,402.328,114.426\"}]},{\"num\":\"344\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,399.878,113.626\"}]},{\"num\":\"345\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,397.528,112.826\"}]},{\"num\":\"346\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,395.078,112.026\"}]},{\"num\":\"347\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,392.678,111.226\"}]},{\"num\":\"348\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,390.278,110.426\"}]},{\"num\":\"349\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,387.878,109.676\"}]},{\"num\":\"350\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,385.478,108.876\"}]},{\"num\":\"351\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,383.078,108.076\"}]},{\"num\":\"352\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,380.678,107.276\"}]},{\"num\":\"353\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,378.278,106.476\"}]},{\"num\":\"354\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,375.828,105.676\"}]},{\"num\":\"355\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,373.428,104.876\"}]},{\"num\":\"356\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,371.028,104.076\"}]},{\"num\":\"357\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,368.628,103.276\"}]},{\"num\":\"358\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,366.228,102.476\"}]},{\"num\":\"359\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,363.828,101.676\"}]},{\"num\":\"360\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,361.428,100.876\"}]},{\"num\":\"361\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,359.028,100.076\"}]},{\"num\":\"362\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,356.578,99.276\"}]},{\"num\":\"363\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,354.228,98.476\"}]},{\"num\":\"364\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,351.778,97.676\"}]},{\"num\":\"365\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,349.378,96.926\"}]},{\"num\":\"366\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,346.978,96.126\"}]},{\"num\":\"367\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,344.578,95.326\"}]},{\"num\":\"368\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,342.178,94.526\"}]},{\"num\":\"369\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,339.778,93.726\"}]},{\"num\":\"370\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,337.378,92.926\"}]},{\"num\":\"371\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,334.978,92.126\"}]},{\"num\":\"372\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,332.528,91.326\"}]},{\"num\":\"373\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,330.128,90.526\"}]},{\"num\":\"374\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,327.728,89.726\"}]},{\"num\":\"375\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,325.328,88.926\"}]},{\"num\":\"376\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,322.928,88.126\"}]},{\"num\":\"377\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,320.528,87.326\"}]},{\"num\":\"378\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,318.128,86.526\"}]},{\"num\":\"379\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,315.728,85.776\"}]},{\"num\":\"380\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,313.278,84.976\"}]},{\"num\":\"381\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,310.928,84.176\"}]},{\"num\":\"382\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,308.478,83.376\"}]},{\"num\":\"383\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,306.078,82.576\"}]},{\"num\":\"384\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,303.678,81.776\"}]},{\"num\":\"385\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,301.278,80.976\"}]},{\"num\":\"386\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,298.878,80.176\"}]},{\"num\":\"387\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,296.478,79.376\"}]},{\"num\":\"388\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,294.078,78.576\"}]},{\"num\":\"389\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,291.678,77.776\"}]},{\"num\":\"390\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,289.228,76.976\"}]},{\"num\":\"391\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,286.828,76.176\"}]},{\"num\":\"392\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,284.428,75.376\"}]},{\"num\":\"393\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,282.028,74.576\"}]},{\"num\":\"394\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,279.628,73.776\"}]},{\"num\":\"395\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,277.228,73.026\"}]},{\"num\":\"396\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,274.828,72.226\"}]},{\"num\":\"397\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,272.428,71.426\"}]},{\"num\":\"398\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,269.978,70.626\"}]},{\"num\":\"399\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,267.628,69.826\"}]},{\"num\":\"400\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,265.178,69.026\"}]},{\"num\":\"401\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,262.778,68.226\"}]},{\"num\":\"402\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,260.378,67.426\"}]},{\"num\":\"403\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,257.978,66.626\"}]},{\"num\":\"404\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,255.578,65.826\"}]},{\"num\":\"405\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,253.178,65.026\"}]},{\"num\":\"406\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,250.778,64.226\"}]},{\"num\":\"407\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,248.378,63.426\"}]},{\"num\":\"408\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,245.928,62.626\"}]},{\"num\":\"409\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,243.528,61.826\"}]},{\"num\":\"410\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,241.128,61.026\"}]},{\"num\":\"411\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,238.728,60.276\"}]},{\"num\":\"412\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,236.328,59.476\"}]},{\"num\":\"413\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,233.928,58.676\"}]},{\"num\":\"414\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,231.528,57.876\"}]},{\"num\":\"415\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,229.128,57.076\"}]},{\"num\":\"416\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,226.678,56.276\"}]},{\"num\":\"417\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,224.278,55.476\"}]},{\"num\":\"418\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,221.878,54.676\"}]},{\"num\":\"419\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,219.478,53.876\"}]},{\"num\":\"420\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,217.078,53.076\"}]},{\"num\":\"421\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,214.678,52.276\"}]},{\"num\":\"422\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,212.278,51.476\"}]},{\"num\":\"423\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,209.878,50.676\"}]},{\"num\":\"424\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,207.478,49.876\"}]},{\"num\":\"425\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,205.078,49.126\"}]},{\"num\":\"426\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,202.628,48.326\"}]},{\"num\":\"427\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,200.228,47.526\"}]},{\"num\":\"428\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,197.828,46.726\"}]},{\"num\":\"429\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,195.428,45.926\"}]},{\"num\":\"430\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,193.028,45.126\"}]},{\"num\":\"431\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,190.628,44.326\"}]},{\"num\":\"432\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,188.228,43.526\"}]},{\"num\":\"433\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,185.828,42.726\"}]},{\"num\":\"434\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,183.378,41.926\"}]},{\"num\":\"435\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,181.028,41.126\"}]},{\"num\":\"436\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,178.578,40.326\"}]},{\"num\":\"437\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,176.178,39.526\"}]},{\"num\":\"438\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,173.778,38.726\"}]},{\"num\":\"439\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,171.378,37.926\"}]},{\"num\":\"440\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,168.978,37.126\"}]},{\"num\":\"441\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,166.578,36.376\"}]},{\"num\":\"442\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,164.178,35.576\"}]},{\"num\":\"443\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,161.778,34.776\"}]},{\"num\":\"444\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,159.328,33.976\"}]},{\"num\":\"445\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,156.928,33.176\"}]},{\"num\":\"446\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,154.528,32.376\"}]},{\"num\":\"447\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,152.128,31.576\"}]},{\"num\":\"448\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,149.728,30.776\"}]},{\"num\":\"449\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,147.328,29.976\"}]},{\"num\":\"450\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,144.928,29.176\"}]},{\"num\":\"451\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,142.528,28.376\"}]},{\"num\":\"452\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,140.078,27.576\"}]},{\"num\":\"453\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,137.728,26.776\"}]},{\"num\":\"454\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,135.278,25.976\"}]},{\"num\":\"455\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,132.878,25.176\"}]},{\"num\":\"456\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,130.478,24.376\"}]},{\"num\":\"457\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,128.078,23.626\"}]},{\"num\":\"458\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,125.678,22.826\"}]},{\"num\":\"459\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,123.278,22.026\"}]},{\"num\":\"460\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,120.878,21.226\"}]},{\"num\":\"461\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,118.478,20.426\"}]},{\"num\":\"462\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,116.028,19.626\"}]},{\"num\":\"463\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,113.628,18.826\"}]},{\"num\":\"464\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,111.228,18.026\"}]},{\"num\":\"465\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,108.828,17.226\"}]},{\"num\":\"466\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,106.428,16.426\"}]},{\"num\":\"467\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,104.028,15.626\"}]},{\"num\":\"468\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,101.628,14.826\"}]},{\"num\":\"469\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,99.228,14.026\"}]},{\"num\":\"470\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,96.778,13.226\"}]},{\"num\":\"471\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,94.428,12.476\"}]},{\"num\":\"472\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,91.978,11.676\"}]},{\"num\":\"473\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,89.578,10.876\"}]},{\"num\":\"474\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,87.178,10.076\"}]},{\"num\":\"475\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,84.778,9.276\"}]},{\"num\":\"476\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,82.378,8.476\"}]},{\"num\":\"477\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,79.978,7.676\"}]},{\"num\":\"478\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,77.578,6.876\"}]},{\"num\":\"479\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,75.178,6.076\"}]},{\"num\":\"480\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,72.728,5.276\"}]},{\"num\":\"481\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,70.328,4.476\"}]},{\"num\":\"482\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,67.928,3.676\"}]},{\"num\":\"483\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,65.528,2.876\"}]},{\"num\":\"484\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,63.128,2.076\"}]},{\"num\":\"485\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,60.728,1.276\"}]},{\"num\":\"486\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,58.328,0.476\"}]},{\"num\":\"487\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,55.928,-0.274\"}]},{\"num\":\"488\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,53.478,-1.074\"}]},{\"num\":\"489\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,51.128,-1.874\"}]},{\"num\":\"490\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,48.678,-2.674\"}]},{\"num\":\"491\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,46.278,-3.474\"}]},{\"num\":\"492\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,43.878,-4.274\"}]},{\"num\":\"493\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,41.478,-5.074\"}]},{\"num\":\"494\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,39.078,-5.874\"}]},{\"num\":\"495\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,36.678,-6.674\"}]},{\"num\":\"496\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,34.278,-7.474\"}]},{\"num\":\"497\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,31.878,-8.274\"}]},{\"num\":\"498\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,29.428,-9.074\"}]},{\"num\":\"499\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,27.028,-9.874\"}]},{\"num\":\"500\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,24.628,-10.674\"}]},{\"num\":\"501\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,22.228,-11.474\"}]},{\"num\":\"502\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,19.828,-12.274\"}]},{\"num\":\"503\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,17.428,-13.024\"}]},{\"num\":\"504\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,15.028,-13.824\"}]},{\"num\":\"505\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,12.628,-14.624\"}]},{\"num\":\"506\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,10.178,-15.424\"}]},{\"num\":\"507\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,7.828,-16.224\"}]},{\"num\":\"508\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,5.378,-17.024\"}]},{\"num\":\"509\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,2.978,-17.824\"}]},{\"num\":\"510\",\"Command\":[{\"cmdType\":\"Move\",\"objectId\":\"13\",\"transformMatrix\":\"0.985,0.17,-0.17,0.985,0.6,-18.7\"}]}]}]}}","/* eslint-env browser */ /*- global SVGAnim */\nimport SVGAnim from '@artdeco/snapsvg-animator'\nconst json = require('./menu.json')\n\nconst menuContainer = document.getElementById('menu')\n\nconst width = 1226\nconst height = 818\n\nconst comp = new SVGAnim(json, width, height)\nmenuContainer.appendChild(comp.s.node)\n\nsetTimeout(() => {\n  const about = menuContainer.querySelector('svg > g > g[token=\"4\"]')\n  const node = menuContainer.querySelector('svg > g > g[token=\"3\"]')\n  const packages = menuContainer.querySelector('svg > g > g[token=\"2\"]')\n  const contact = menuContainer.querySelector('svg > g > g[token=\"1\"]')\n\n  assignLink(about, 'about')\n  assignLink(node, 'node')\n  assignLink(packages, 'packages')\n  assignLink(contact, 'contact')\n}, 100)\n\n// var jsonfile = 'js/menu.json',\n  // AJAX_req\n\n// AJAX_JSON_Req(jsonfile)\n\n// function handle_AJAX_Complete() {\n//   if (AJAX_req.readyState == 4 && AJAX_req.status == 200) {\n//     var json = JSON.parse(AJAX_req.responseText)\n//     var comp = new SVGAnim(json, width, height, fps)\n//     menuContainer.appendChild(comp.s.node)\n\n//     setTimeout(function () {\n//       var about = menuContainer.querySelector('svg > g > g[token=\"4\"]')\n//       var node = menuContainer.querySelector('svg > g > g[token=\"3\"]')\n//       var packages = menuContainer.querySelector('svg > g > g[token=\"2\"]')\n//       var contact = menuContainer.querySelector('svg > g > g[token=\"1\"]')\n\n//       assignLink(about, 'about')\n//       assignLink(node, 'node')\n//       assignLink(packages, 'packages')\n//       assignLink(contact, 'contact')\n//     }, 100)\n//   }\n// }\n\nfunction assignLink(target, name) {\n  target.onclick = function () {\n    window.location = '#' + name\n  }\n}\n\n// function AJAX_JSON_Req(url) {\n//   AJAX_req = new XMLHttpRequest()\n//   AJAX_req.open('GET', url, true)\n//   AJAX_req.setRequestHeader('Content-type', 'application/json')\n\n//   AJAX_req.onreadystatechange = handle_AJAX_Complete\n//   AJAX_req.send()\n// }"],
"names":["$jscomp.arrayIteratorImpl","$jscomp.defineProperty","$jscomp.global","$jscomp.polyfill","GP","GarbagePool","EMPTY_POOL","REF_POOL","Bitmap","parentMC","resourceManager","charId","ObjectId","placeAfter","transform","instance","parentEl","el","create","this.create","g","id","attr","children","isMask","isMasked","mask","maskTill","b","m_data","DOMDocument","Bitmaps","length","charid","bitmap","paper","image","bitmapPath","add","transformArray","split","transformMat","window","Snap","Matrix","$jscomp.arrayFromIterable","parseInt","afterMC","getChildById","parent","before","constructor","ResourceManager","data","m_shapes","m_movieClips","m_bitmaps","m_text","shapeIndex","Shape","shapeData","bitmapIndex","bitmapData","textIndex","Text","textData","undefined","Timeline","movieClipIndex","movieClipData","j","k","path","shape","addPath","resourcePath","d","pathType","fillImage","color","clr","r","substring","colorOpacity","fillColor","img","mat","patternTransform","patternArray","src","exists","select","newPattern","linearGradient","grad","fillGradient","getFillGradient","radialGradient","strokeWidth","type","_x2","parseFloat","x2","_y2","y2","gradientString","_x","x1","_y","y1","getBBox","x","width","cx","y","height","cy","_fx","fx","_fy","fy","i","stop","result","exec","stopColor","stopOpacity","offset","gradient","gradientFill","resourceImg","pattern","e","f","bounds","textAnchor","textBounds","textBox","addText","lineMode","behaviour","textAlign","paras","alignment","fontSize","textRun","style","fontName","fontColor","letterSpacing","textStyles","textBaseline","isBorderDrawn","rect","textRect","stroke","fill","text","txt","textY","bbox","spans","chars","boundsWidth","charAt","tempTxt","newIndex","lastIndexOf","w","substr","slice","push","remove","selectAll","sp","h","linespacing","textX","CMD.PlaceObjectCommand","charID","objectID","name","m_charID","m_objectID","m_name","m_placeAfter","m_transform","m_bounds","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.PlaceObjectCommand","prototype","execute","CMD.PlaceObjectCommand.prototype.execute","shapeObject","insertAtIndex","bmpObject","textObject","movieclipTimeline","movieclip","MovieClip","play","CMD.MoveObjectCommand","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.MoveObjectCommand","CMD.MoveObjectCommand.prototype.execute","child","matrix","CMD.UpdateObjectCommand","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.UpdateObjectCommand","CMD.UpdateObjectCommand.prototype.execute","CMD.RemoveObjectCommand","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.RemoveObjectCommand","CMD.RemoveObjectCommand.prototype.execute","splice","CMD.UpdateVisibilityCommand","visibility","m_visibility","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.UpdateVisibilityCommand","CMD.UpdateVisibilityCommand.prototype.execute","visibleValue","CMD.UpdateMaskCommand","m_maskTill","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.UpdateMaskCommand","CMD.UpdateMaskCommand.prototype.execute","maskContent","clone","def","toDefs","append","maskElement","CMD.ApplyMaskCommand","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.ApplyMaskCommand","CMD.ApplyMaskCommand.prototype.execute","insideMask","currentMask","currentTill","orig","clear","currentMaskEl","currentMaskGroup","after","GarbagePool.prototype.addRef","refs","prepend","CMD.UpdateColorTransformCommand","colorMatrix","m_colorMatrix","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.UpdateColorTransformCommand","CMD.UpdateColorTransformCommand.prototype.execute","opacity","CMD.AddFrameScriptCommand","scriptID","script","m_scriptID","m_script","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.AddFrameScriptCommand","CMD.AddFrameScriptCommand.prototype.execute","_scripts","CMD.RemoveFrameScriptCommand","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.RemoveFrameScriptCommand","CMD.RemoveFrameScriptCommand.prototype.execute","CMD.SetFrameLabelCommand","CMD$$module$node_modules$$artdeco$snapsvg_animator$src$commands.SetFrameLabelCommand","CMD.SetFrameLabelCommand.prototype.execute","commandTimeline","s","m_timeline","m_currentFrameNo","m_frameCount","frameCount","_labels","playing","commandList","Label","addChild","?.prototype","find","_addChild","unshift","containsMask","some","getX","getY","mouseover","cb","mouseout","mousedown","mousemove","click","executeFrameScript","eval","getFrame","num","Frame","n","_loop","frame","commands","Command","found","c","cmdData","cmdType","objectId","command","clearChildren","_animate","step_1_animTimeline","step_5_frameScripts","item","removed","_runCommands","transformMatrix","scriptId","executeCommands","_checkLoop","call","gotoAndStop","fr","_gotoAndPlayStop","gotoAndPlay","bStop","labels","getFrameLabels","bFound","frameNum","_loopAround","log","indexOf","Array","args","arguments","toUpperCase","SVGAnim","json","params","cbk","version","elementId","element","autoplay","mc","interval","linkage","toString","maintimelineIndex","linkageName","mainTimeline","setTimeout","fps","clearTimeout","menuContainer","document","getElementById","comp","appendChild","node","querySelector","packages","contact","assignLink","about","target","onclick","target.onclick","location"]
}
