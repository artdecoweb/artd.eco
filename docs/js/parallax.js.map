{
"version":3,
"file":"docs/js/parallax.js",
"lineCount":4,
"mappings":"A,YA2B4B,QAAA,EAAQ,CAAC,CAAD,CAAQ,CAC1C,IAAI,EAAQ,CACZ,OAAO,SAAQ,EAAG,CAChB,MAAI,EAAJ,CAAY,CAAA,OAAZ,CACS,CACL,KAAM,CAAA,CADD,CAEL,MAAO,CAAA,CAAM,CAAA,EAAN,CAFF,CADT,CAMS,CAAC,KAAM,CAAA,CAAP,CAPO,CAFwB;AC1B5C,IAAMA,EAAM,EAAA,OAAA,CC4BgBC,QAAQ,CAAC,CAAD,CAAW,CAC7C,GAAI,EAAA,CAAA,WAAoB,MAApB,CAAJ,CAAA,CCEA,IAAI,EAAoC,WAApC,EAAmB,MAAO,OAA1B,EAAmD,MAAA,SAAnD,EDCK,CCAa,CAAW,MAAA,SAAX,CACtB,EAAA,CAAO,CAAA,CAAmB,CAAA,KAAA,CDDjB,CCCiB,CAAnB,CHc6B,CAAC,KAAMC,CAAA,CEflC,CFekC,CAAP,CIbpC,KADA,IAAI,EAAM,EACV,CAAO,CAAC,CAAC,CAAD,CFFC,CEEI,KAAA,EAAL,MAAR,CAAA,CACE,CAAA,KAAA,CAAS,CAAA,MAAT,CAEF,EAAA,CAAO,CFRP,CAAA,MAAA,EAD6C,CD5BnC,CAAIC,QAAAC,iBAAA,CAA0B,WAA1B,CAAJ,CAAA,CAAZ,CAEMC,EAAM,EAFZ,CAIMC,EAAK,IAAIC,oBAAJ,CAAyB,QAAA,CAACC,CAAD,CAAa,CAC/CA,CAAAC,QAAA,CAAgB,QAAA,CAAC,CAAD,CAAgC,CAA7B,IAAAC,EAAF,CAAE,OAEjB,IAFe,CAAUC,eAEzB,CAAoB,CAElB,GADMC,CACN,CADYF,CAAAG,aAAA,CAAoB,UAApB,CACZ,CAEEH,CAAAI,MAAA,CAAa,kBAAb,CACA,CADmCF,CACnC,CAAAF,CAAAK,gBAAA,CAAuB,UAAvB,CAEEV,EAAA,CAAIK,CAAAM,EAAJ,CAAJ,GAGMC,CA2BN,CA3BiBA,QAAA,EAAM,CACrB,IAAMC,EAAIR,CAAAS,sBAAA,EAAAC,IAAJF;AAAyCG,MAAAC,YAA/C,CACMC,EAASL,CAATK,CAAW,CADjB,CAEMC,EAAOd,CAAAG,aAAA,CAAoB,OAApB,CACEH,EAAAG,aAAA,CAAoB,UAApB,CACf,KAAIY,EAAKF,CAILC,EAAJ,GACEC,CADF,CACOC,IAAAC,IAAA,CAASH,CAAT,CAAeD,CAAf,CADP,CAGMK,EAAAA,CAAIF,IAAAG,MAAA,CAAWJ,CAAX,CAAJG,CAAqB,IAErBE,EAAAA,CAAIpB,CAAAG,aAAA,CAAoB,GAApB,CAGNkB,EAAAA,CAAI,cAAJA,EAFYD,CAAAE,CAAId,CAAJc,CAAQC,UAAA,CAAWH,CAAX,CAARE,CAAwB,IAAxBA,CAA+B,GAE3CD,EAAI,IAAJA,CAA+BH,CAA/BG,CAAI,MACJD,EAAJ,GACEpB,CAAAI,MAAA,MACA,CADwD,CACxD,CADwBJ,CAAAwB,WAAAC,YACxB,CAD4D,IAC5D,CAAAJ,CAAA,EAAK,mBAFP,CAIArB,EAAAI,MAAA,CAAa,YAAb,CAAA,CAA8D,CAA9D,CAA6BJ,CAAAwB,WAAAE,aAA7B,CAAkE,IAElE1B,EAAAI,MAAA,UAAA,CAA4BiB,CAxBP,CA2BvB,CADAV,MAAAgB,iBAAA,CAAwB,QAAxB,CAAkCpB,CAAlC,CACA,CAAAZ,CAAA,CAAIK,CAAAM,EAAJ,CAAA,CAAkBC,CA9BlB,CAPkB,CAApB,IAuCQP,EAAAM,EAAN,GAAoBX,EAApB,GACAgB,MAAAiB,oBAAA,CAA2B,QAA3B,CAAqCjC,CAAA,CAAIK,CAAAM,EAAJ,CAArC,CACA,CAAA,OAAOX,CAAA,CAAIK,CAAAM,EAAJ,CAFP,CAzC4C,CAAhD,CAD+C,CAAtC,CAkDXK;MAAAgB,iBAAA,CAAwB,QAAxB,CAAkC,QAAA,EAAM,EAAxC,CAIA,KAAIE,EAAK,CACTvC,EAAAS,QAAA,CAAY,QAAA,CAAC+B,CAAD,CAAS,CACnBA,CAAAxB,EAAA,CAAUuB,CAAA,EACVC,EAAAC,aAAA,CAAiB,UAAjB,CAA6BD,CAAA1B,MAAA,CAAU,kBAAV,CAA7B,CACA0B,EAAA1B,MAAA,CAAU,kBAAV,CAAA,CAAgC,IAChCR,EAAAoC,QAAA,CAAWF,CAAX,CAJmB,CAArB;",
"sources":[" [synthetic:es6/util/arrayiterator] ","splendid/js/parallax.js"," [synthetic:es6/util/arrayfromiterable] "," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "],
"sourcesContent":["/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n","/* eslint-env browser */\nconst els = [...document.querySelectorAll('.Parallax')]\n\nconst map = {}\n\nconst io = new IntersectionObserver((entries) => {\n  entries.forEach(({ target, isIntersecting }) => {\n    // console.log(target, isIntersecting)\n    if (isIntersecting) {\n      const src = target.getAttribute('data-src')\n      if (src) {\n        // first time showing\n        target.style['background-image'] = src\n        target.removeAttribute('data-src')\n      }\n      if (map[target.pid]) {\n        return\n      }\n      const listener = () => {\n        const d = target.getBoundingClientRect().top - window.innerHeight\n        const offset = d/2\n        const minY = target.getAttribute('min-y')\n        const minYMd = target.getAttribute('min-y-md')\n        let mo = offset\n        // if (windowWidth > 768 && minYMd && windowWidth < 940) {\n        //   mo = Math.max(minYMd, offset)\n        // } else\n        if (minY) {\n          mo = Math.max(minY, offset)\n        }\n        const o = Math.floor(mo) + 'px'\n        // target.style['background-position-y'] = o\n        const x = target.getAttribute('x')\n        const offsetX = x ? d * parseFloat(x) + 'px' : '0'\n        // target.style['background-position-x'] = Math.floor(offsetX) + 'px'\n        let t = `translate3d(${offsetX}, ${o}, 0)`\n        if (x) {\n          target.style['width'] = target.parentNode.clientWidth * 3 + 'px'\n          t += ' translateX(-75%)'\n        }\n        target.style['min-height'] = target.parentNode.clientHeight * 3 + 'px'\n        // window.innerHeight * 2.5 + 'px'\n        target.style['transform'] = t\n      }\n      window.addEventListener('scroll', listener)\n      map[target.pid] = listener\n    } else {\n      if (!(target.pid in map)) return\n      window.removeEventListener('scroll', map[target.pid])\n      delete map[target.pid]\n    }\n  })\n})\n\nlet windowWidth = window.innerWidth\nwindow.addEventListener('resize', () => {\n  windowWidth = window.innerWidth\n})\n\nlet id = 0\nels.forEach((img) => {\n  img.pid = id++\n  img.setAttribute('data-src', img.style['background-image'])\n  img.style['background-image'] = null\n  io.observe(img)\n})\n\n// window.addEventListener('scroll', () => {\n//   els.forEach((el) => {\n//     const d = el.getBoundingClientRect().top - window.innerHeight\n//     const showing = d < 0\n//     if (!showing) return\n//     const offset = d/2\n//     const translate = el.getAttribute('translate')\n//     const o = Math.floor(offset) + 'px'\n//     if (translate !== null) {\n//       el.style['transform'] = `translateY(${o})`\n//       el.style['-webkit-transform'] = `translateY(${o})`\n//     } else {\n//       el.style['background-position-y'] = Math.floor(offset) + 'px'\n//     }\n//     const x = el.getAttribute('x')\n//     if (x) {\n//       const offsetX = d * parseFloat(x)\n//       el.style['background-position-x'] = Math.floor(offsetX) + 'px'\n//     }\n//   })\n// })","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require es6/util/makeiterator';\n'require es6/util/arrayfromiterator';\n\n\n/**\n * Copies the values from an Iterable into an Array.\n * @param {string|!Array<T>|!Iterable<T>|!Arguments<T>} iterable\n * @return {!Array<T>}\n * @template T\n */\n$jscomp.arrayFromIterable = function(iterable) {\n  if (iterable instanceof Array) {\n    return iterable;\n  } else {\n    return $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n  }\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require base';\n\n\n/**\n * Copies the values from an Iterator into an Array. The important difference\n * between this and $jscomp.arrayFromIterable is that if the iterator's\n * next() method has already been called one or more times, this method returns\n * only the values that haven't been yielded yet.\n * @param {!Iterator<T>} iterator\n * @return {!Array<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.arrayFromIterator = function(iterator) {\n  var i;\n  var arr = [];\n  while (!(i = iterator.next()).done) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n"],
"names":["els","$jscomp.arrayFromIterable","$jscomp.arrayIteratorImpl","document","querySelectorAll","map","io","IntersectionObserver","entries","forEach","target","isIntersecting","src","getAttribute","style","removeAttribute","pid","listener","d","getBoundingClientRect","top","window","innerHeight","offset","minY","mo","Math","max","o","floor","x","t","offsetX","parseFloat","parentNode","clientWidth","clientHeight","addEventListener","removeEventListener","id","img","setAttribute","observe"]
}
