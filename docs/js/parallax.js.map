{
"version":3,
"file":"docs/js/parallax.js",
"lineCount":4,
"mappings":"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",
"sources":[" [synthetic:es6/util/arrayiterator] "," [synthetic:es6/util/arrayfromiterable] ","splendid/js/parallax.js"," [synthetic:es6/util/makeiterator] "," [synthetic:es6/util/arrayfromiterator] "],
"sourcesContent":["/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Utility method for creating an iterator for Arrays.\n */\n'require base';\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {function():!IIterableResult<T>}\n * @template T\n */\n$jscomp.arrayIteratorImpl = function(array) {\n  var index = 0;\n  return function() {\n    if (index < array.length) {\n      return {\n        done: false,\n        value: array[index++],\n      };\n    } else {\n      return {done: true};\n    }\n  };\n};\n\n/**\n * Returns an internal iterator from the given array.\n * @param {!Array<T>} array\n * @return {!Iterator<T>}\n * @template T\n */\n$jscomp.arrayIterator = function(array) {\n  return /** @type {!Iterator<T>} */ ({next: $jscomp.arrayIteratorImpl(array)});\n};\n\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require es6/util/makeiterator';\n'require es6/util/arrayfromiterator';\n\n\n/**\n * Copies the values from an Iterable into an Array.\n * @param {string|!Array<T>|!Iterable<T>|!Arguments<T>} iterable\n * @return {!Array<T>}\n * @template T\n */\n$jscomp.arrayFromIterable = function(iterable) {\n  if (iterable instanceof Array) {\n    return iterable;\n  } else {\n    return $jscomp.arrayFromIterator($jscomp.makeIterator(iterable));\n  }\n};\n","/* eslint-env browser */\nconst map = {}\n\nconst io = new IntersectionObserver((entries) => {\n  entries.forEach(({ target, isIntersecting }) => {\n    // console.log(target, isIntersecting)\n    if (isIntersecting) {\n      const src = target.getAttribute('data-src')\n      if (src) {\n        // first time showing\n        target.style['background-image'] = src\n        target.removeAttribute('data-src')\n      }\n      if (map[target.pid]) {\n        return\n      }\n\n      let y = target.getAttribute('y')\n      if (y === null) y = 2\n      y = parseFloat(y)\n\n      let x = target.getAttribute('x')\n      if (x === null) x = 0\n      x = parseFloat(x)\n\n      let oy = target.getAttribute('oy')\n      if (oy === null) oy = 0\n      oy = parseFloat(oy)\n      // let X = x ? d * parseFloat(x) : 0\n\n      const listener = () => {\n        const box = target.getBoundingClientRect()\n        const { top, left } = box\n        const d = top - window.innerHeight\n\n        let Y = 0\n        let X = 0\n\n        if (y) {\n          const offset = d/y\n          const minY = target.getAttribute('min-y')\n          let mo = offset\n          if (minY) {\n            mo = Math.max(minY, offset)\n          }\n          Y = mo\n        }\n        // const minYMd = target.getAttribute('min-y-md')\n        // if (windowWidth > 768 && minYMd && windowWidth < 940) {\n        //   mo = Math.max(minYMd, offset)\n        // } else\n\n        // target.style['background-position-y'] = o\n        // target.style['background-position-x'] = Math.floor(offsetX) + 'px'\n\n        if (x) { // should this be -x at the moment\n          const delta = d * x\n\n          // const totalWidth = window.outerWidth\n          // X = -totalWidth + delta\n          X = -delta\n          target.style['min-width'] = floatToPx(Math.abs(delta) * 10)\n        }\n\n        const ch = `${target.parentNode.clientHeight * 3}px`\n        target.style['min-height'] = ch\n\n        Y += oy\n\n        const t = `translate3d(${floatToPx(X)}, ${floatToPx(Y)}, 0)`\n        target.style['transform'] = t\n      }\n      window.addEventListener('scroll', listener)\n      map[target.pid] = listener\n    } else {\n      if (!(target.pid in map)) return\n      window.removeEventListener('scroll', map[target.pid])\n      delete map[target.pid]\n    }\n  })\n})\n\nconst floatToPx = (f) => {\n  return `${f.toFixed(0)}px`\n}\n\nlet windowWidth = window.innerWidth\nwindow.addEventListener('resize', () => {\n  windowWidth = window.innerWidth\n})\n\nlet id = 0\n\nconst start = () => {\n  const els = [...document.querySelectorAll('.Parallax')]\n  els.forEach((img) => {\n    if (!img.style['background-image']) return\n\n    img.pid = id++\n    img.setAttribute('data-src', img.style['background-image'])\n    img.style['background-image'] = null\n    io.observe(img)\n  })\n}\nwindow['IO'] = () => {\n  start()\n}\n\nstart()\n// window.addEventListener('scroll', () => {\n//   els.forEach((el) => {\n//     const d = el.getBoundingClientRect().top - window.innerHeight\n//     const showing = d < 0\n//     if (!showing) return\n//     const offset = d/2\n//     const translate = el.getAttribute('translate')\n//     const o = Math.floor(offset) + 'px'\n//     if (translate !== null) {\n//       el.style['transform'] = `translateY(${o})`\n//       el.style['-webkit-transform'] = `translateY(${o})`\n//     } else {\n//       el.style['background-position-y'] = Math.floor(offset) + 'px'\n//     }\n//     const x = el.getAttribute('x')\n//     if (x) {\n//       const offsetX = d * parseFloat(x)\n//       el.style['background-position-x'] = Math.floor(offsetX) + 'px'\n//     }\n//   })\n// })","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for for-of loops.\n */\n'require es6/util/arrayiterator';\n\n/**\n * Creates an iterator for the given iterable.  This iterator should never\n * be exposed to user code.\n *\n * @param {string|!Iterable<T>|!Iterator<T>|!Arguments<T>} iterable\n * @return {!Iterator<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.makeIterator = function(iterable) {\n  // NOTE: Disabling typechecking because [] not allowed on @struct.\n  var iteratorFunction = typeof Symbol != 'undefined' && Symbol.iterator &&\n      (/** @type {?} */ (iterable)[Symbol.iterator]);\n  return iteratorFunction ? iteratorFunction.call(iterable) :\n      $jscomp.arrayIterator(/** @type {!Array} */ (iterable));\n};\n","/*\n * Copyright 2016 The Closure Compiler Authors.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * @fileoverview Polyfill for array destructuring.\n */\n'require base';\n\n\n/**\n * Copies the values from an Iterator into an Array. The important difference\n * between this and $jscomp.arrayFromIterable is that if the iterator's\n * next() method has already been called one or more times, this method returns\n * only the values that haven't been yielded yet.\n * @param {!Iterator<T>} iterator\n * @return {!Array<T>}\n * @template T\n * @suppress {reportUnknownTypes}\n */\n$jscomp.arrayFromIterator = function(iterator) {\n  var i;\n  var arr = [];\n  while (!(i = iterator.next()).done) {\n    arr.push(i.value);\n  }\n  return arr;\n};\n"],
"names":["document","querySelectorAll","$jscomp.arrayIteratorImpl","map","io","IntersectionObserver","entries","forEach","target","isIntersecting","src","getAttribute","style","removeAttribute","pid","y","parseFloat","x","oy","listener","d","getBoundingClientRect","box","top","window","innerHeight","Y","X","offset","minY","mo","Math","max","delta","toFixed","abs","parentNode","clientHeight","addEventListener","removeEventListener","id","start","els","$jscomp.arrayFromIterable","img","setAttribute","observe"]
}
